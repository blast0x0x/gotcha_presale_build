{"version":3,"file":"static/js/5963.a7a85c15.chunk.js","mappings":"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","sources":["components/RoundButton.jsx","components/ConnectWalletButton.jsx","layouts/Header.jsx","layouts/index.jsx","components/BettingTimer.jsx","config/index.js","config/whitelist.js","pages/Presale.jsx"],"sourcesContent":["import './RoundButton.scss';\r\n\r\nexport default function RoundButton({children, className, onClick, variant, disabled }) {\r\n  return (\r\n    <button className={`round-button ${className ?? ''} ${variant ?? ''}`} onClick={onClick} disabled={disabled}>{children}</button>\r\n  )\r\n}","import './ConnectWalletButton.scss'\r\nimport RoundButton from './RoundButton'\r\n\r\nexport default function ConnectWalletButton(props) {\r\n  const {onClick} = props;\r\n  return (\r\n    <RoundButton className='connect-btn' onClick={onClick}>Connect wallet</RoundButton>\r\n  )\r\n}","import { Container, Nav, Navbar, Image } from 'react-bootstrap'\nimport { useNavigate, useLocation, Link } from 'react-router-dom';\nimport Logo from 'assets/images/logoNew.png'\nimport './Header.scss'\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport RoundButton from 'components/RoundButton';\nimport { ConnectButton } from \"@rainbow-me/rainbowkit\";\n\nexport default function Header() {\n  const navigate = useNavigate();\n  const { pathname, hash } = useLocation();\n  if (hash === '#about') {\n    window.location.href = '#about'\n  }\n  return (\n    <Navbar expand={false} data-bs-theme=\"dark\" variant=\"dark\" sticky=\"top\" className=\"modern-header transparent-header\">\n      <Container fluid>\n        <div className=\"header-content w-100\">\n          <div className=\"nav-left-spacer\"></div>\n          <Navbar.Brand href='#' onClick={() => navigate('/')} className='logo-container centered-logo'>\n            <Image src={Logo} height='105px' width='120px' className=\"logo-image\" />\n          </Navbar.Brand>\n          <div className=\"wallet-connect-container\">\n            <ConnectButton.Custom>\n              {({\n                account,\n                chain,\n                openAccountModal,\n                openChainModal,\n                openConnectModal,\n                authenticationStatus,\n                mounted,\n              }) => {\n                // Note: If your app doesn't use authentication, you\n                // can remove all 'authenticationStatus' checks\n                const ready = mounted && authenticationStatus !== 'loading';\n                const connected =\n                  ready &&\n                  account &&\n                  chain &&\n                  (!authenticationStatus ||\n                    authenticationStatus === 'authenticated');\n\n                return (\n                  <div\n                    {...(!ready && {\n                      'aria-hidden': true,\n                      'style': {\n                        opacity: 0,\n                        pointerEvents: 'none',\n                        userSelect: 'none',\n                      },\n                    })}\n                    className='button-group'\n                  >\n                    {(() => {\n                      if (!connected) {\n                        return (\n                          <ConnectWalletButton onClick={openConnectModal} type=\"button\" className=\"connect-btn glow-effect\">\n                            <span className=\"btn-icon\">💼</span>\n                            <span className=\"btn-text\">Connect Wallet</span>\n                          </ConnectWalletButton>\n                        );\n                      }\n\n                      if (chain.unsupported) {\n                        return (\n                          <RoundButton onClick={openChainModal} type=\"button\" variant='warning' className=\"network-btn warning-btn\">\n                            <span className=\"btn-icon\">⚠️</span>\n                            <span className=\"btn-text\">Wrong network</span>\n                          </RoundButton>\n                        );\n                      }\n\n                      return (\n                        <div className='d-flex gap-3 isConnected wallet-connected'>\n                          <RoundButton\n                            onClick={openChainModal}\n                            type=\"button\"\n                            className='d-flex align-items-center chain-btn'\n                            variant='primary'\n                          >\n                            {chain.hasIcon && (\n                              <div\n                                className=\"chain-icon\"\n                                style={{\n                                  background: chain.iconBackground,\n                                  width: 18,\n                                  height: 18,\n                                  borderRadius: 999,\n                                  overflow: 'hidden',\n                                  marginRight: 8,\n                                  boxShadow: '0 0 10px rgba(54, 202, 186, 0.5)',\n                                }}\n                              >\n                                {chain.iconUrl && (\n                                  <img\n                                    alt={chain.name ?? 'Chain icon'}\n                                    src={chain.iconUrl}\n                                    style={{ width: 18, height: 18 }}\n                                  />\n                                )}\n                              </div>\n                            )}\n                            <span className=\"chain-name\">{chain.name}</span>\n                          </RoundButton>\n\n                          <RoundButton onClick={openAccountModal} type=\"button\" variant='success' className=\"account-btn\">\n                            <span className=\"account-icon\">👤</span>\n                            <span className=\"account-text\">\n                              {account.displayName}\n                              {account.displayBalance\n                                ? <span className=\"balance-text\"> ({account.displayBalance})</span>\n                                : ''}\n                            </span>\n                          </RoundButton>\n                        </div>\n                      );\n                    })()}\n                  </div>\n                );\n              }}\n            </ConnectButton.Custom>\n          </div>\n        </div>\n      </Container>\n    </Navbar>\n  )\n}\n","import Header from \"./Header\";\r\nimport './index.scss'\r\n\r\nexport default function Layout({children}) {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        {children}\r\n      </main>\r\n     \r\n    </>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\nimport './BettingTimer.scss'\n\nconst BettingTimer = ({ timeToEnd }) => {\n  const [timeLeft, setTimeLeft] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  })\n\n  useEffect(() => {\n    const calculateTimeLeft = () => {\n      const now = Math.floor(Date.now() / 1000)\n      const difference = timeToEnd - now\n\n      if (difference > 0) {\n        const days = Math.floor(difference / (60 * 60 * 24))\n        const hours = Math.floor((difference % (60 * 60 * 24)) / (60 * 60))\n        const minutes = Math.floor((difference % (60 * 60)) / 60)\n        const seconds = Math.floor(difference % 60)\n\n        setTimeLeft({ days, hours, minutes, seconds })\n      } else {\n        setTimeLeft({ days: 0, hours: 0, minutes: 0, seconds: 0 })\n      }\n    }\n\n    calculateTimeLeft()\n    const timer = setInterval(calculateTimeLeft, 1000)\n\n    return () => clearInterval(timer)\n  }, [timeToEnd])\n\n  const padNumber = (num) => String(num).padStart(2, '0')\n\n  return (\n    <div className=\"modern-timer\">\n      {timeLeft.days > 0 && (\n        <div className=\"time-unit\">\n          <div className=\"time-value\">{padNumber(timeLeft.days)}</div>\n          <div className=\"time-label\">D</div>\n        </div>\n      )}\n      <div className=\"time-unit\">\n        <div className=\"time-value\">{padNumber(timeLeft.hours)}</div>\n        <div className=\"time-label\">H</div>\n      </div>\n      <div className=\"time-unit\">\n        <div className=\"time-value\">{padNumber(timeLeft.minutes)}</div>\n        <div className=\"time-label\">M</div>\n      </div>\n      <div className=\"time-unit\">\n        <div className=\"time-value\">{padNumber(timeLeft.seconds)}</div>\n        <div className=\"time-label\">S</div>\n      </div>\n    </div>\n  )\n}\n\nexport default BettingTimer\n","export const MAIN_NET = 146;\r\nexport const TEST_NET = 57054;\r\n\r\nexport const GG_ADDRESS_TEST = \"0x766DC248E729818cccdd9984D95146b251f527be\";\r\nexport const GG_ADDRESS_MAIN = \"0x558Fc396aa4d39A647DE44F9850890aA2A86a2c8\";\r\n\r\nexport const OWNER_GOTCHA_ADDRESS_TEST = \"0xA8D45A282f5234fDCAC87cAfcdF580D5B245eaEB\";\r\nexport const OWNER_GOTCHA_ADDRESS_MAIN = \"0x23084fC81f1d2906D629d917FA30776E0a382d26\";\r\n\r\nexport const PRICEFEED_ADDRESS_TEST = \"0xC13a2Af6076E1dc5673eA9f3476a60299eADf7AE\";\r\nexport const PRICEFEED_ADDRESS_MAIN = \"0xc76dFb89fF298145b417d221B2c747d84952e01d\";\r\n\r\nexport const PRESALE_ADDRESS_TEST = \"0xBf0079991B5D2dca44618326A74Cc7E5Ecd60e32\";\r\nexport const PRESALE_ADDRESS_MAIN = \"0x8a56Dba8aD3c720d92008A8d4529d1802f6515Ce\";","const whitelist = [\r\n    \"0x9a5e8e9dede27d6427750e6b2e759ad01dcec5af\",\r\n    \"0x1bf7dc7fbc5105a29da7f0f5414ae0dcb9896ee3\",\r\n    \"0x4b4670c2a0c25e570ab97ffadfe47ab283f72ddd\",\r\n    \"0x63850136cc5976f32011a929e0e7d7d0bd36c79a\",\r\n    \"0x84503a5bc51b98967557909da7fd072b3b303a52\",\r\n    \"0x6cae990f4c9ce68b281ce6d8b0767223caee6bc9\",\r\n    \"0x1788de0038e475780f3977602cb85856ded3b421\",\r\n    \"0x6d1218deff514a810fe5eaf61be475966d54ae34\",\r\n    \"0x3eca036b8ab818caec5ca64f43c5918e75148dba\",\r\n    \"0x2ac12444895a1f8c9297d3ef91e2e651bbd1867f\",\r\n    \"0x2afeec0683f4ac9b57a532650c055f446a079b24\",\r\n    \"0xb4bd807c9cdde19ae1498c7b7006713268e25997\",\r\n    \"0x774c71181c3a4504cc741d0b64a34012e952f047\",\r\n    \"0xba31a17f37f39354a2ac8a8c7d88778e6376784a\",\r\n    \"0xbfe03251c275a1360cad51dae0ed09687aad0fad\",\r\n    \"0x11521e3791801a12ce92be9a86cc82b8e3e066b6\",\r\n    \"0x144710cbb9065faaf13f67bb9c32d88610bf0c90\",\r\n    \"0x2ebab2e06960db296d9a20088aed646259df22d3\",\r\n    \"0x8981b668a2340a8d5ff76feb5d82a8ad7eac9a11\",\r\n    \"0x4c3a35e91c177a2d6f94f232ad7c68fd01fc04b5\",\r\n    \"0x58409758ed71a143503d809ec0375082636f8dca\",\r\n    \"0xe3b9878690b92166cf4ab71e6935bb4ecb1ee83a\",\r\n    \"0x08539431f4d59a02d0347588f6fbdb7d69aad2c3\",\r\n    \"0xb00f89b2e000d16be63f861ab24f1c2aca4036fb\",\r\n    \"0xd12c9ad61ae5af62a4b0613019dcbc468cb1482e\",\r\n    \"0x8728c811f93eb6ac47d375e6a62df552d62ed284\",\r\n    \"0xe109e69c0f246a78786b57cc21563e60430f8dc2\",\r\n    \"0x5c1de9ce04dc35d8a2d2ab821840319f03a5e291\",\r\n    \"0xb1e6ab07a598100d2dfb3513d13d0692a1291a49\",\r\n    \"0xe9b113c1a528464d7d862423ffdc8f9ca6f88b15\",\r\n    \"0x3af3bc41b8b8a9c1fff318883c9d3a5d96571fbc\",\r\n    \"0x30a40961a176e74ff72386fbce5434e755eeaaaf\",\r\n    \"0xa963f85632583055b61517e4f48b66c865820eee\",\r\n    \"0x17d6a880bde32071c208ceaa0f38de613acf2cdf\",\r\n    \"0xddc366f52c143abe508050a1f7dc4e0164be8674\",\r\n    \"0xddcc309669a5232d4edb16e963b9f8f6856cc069\",\r\n    \"0x20a9272c3685eff2d6d6af71b733087d8f741bd3\",\r\n    \"0xa9db43385d1d8e45f0f9a6a3e8bdda18668e7f33\",\r\n    \"0x255150d7a3cf92ba5070a78c62ebc1eff72efea6\",\r\n    \"0x7da75a76dfe6c6178e2023b9d8f4f02642985c3d\",\r\n    \"0x4e0ec2b1f6953259b5b3ed7d0bf2b68c012c12f0\",\r\n    \"0x5d581569f01aaa49ff0d4db964af33963be69c48\",\r\n    \"0x03f1a715650814e31eeea113b3145981071dbfbc\",\r\n    \"0x22f2be6735cba0ab2d25d510426fdfc02f0f13ad\",\r\n    \"0x07c681c5d52b7c3b32157f70a4e4431dac2fcd2d\",\r\n    \"0xebe2adcbc2448787edffb030307beb8efba583da\",\r\n    \"0x254bb212e0d498f5da2890ac99d7347f497c4141\",\r\n    \"0x64d60dca74e3a2dc9400480e9866d2ae8faf6386\",\r\n    \"0x363085d9ebc20715fc61c3337f293b7940529e1f\",\r\n    \"0x882b5fa75095d18b36c0ae18699d435535fad875\",\r\n    \"0xc954956434e6e3da56795bbb4702d6095204f3af\",\r\n    \"0xc49ea46d467819c1ac07c4f7f844ea8f9a4d8fa9\",\r\n    \"0xca5cda5b570047ea23a70c71301797b64518457f\",\r\n    \"0xdad841cd94f196fcb1e1676380752512e981f71f\",\r\n    \"0xafff4c60403d2fcb059c45b7ae09d3b49361a88d\",\r\n    \"0xe39919542a1802eba69e280d358b606aab53a5b7\",\r\n    \"0xf6735eb77b94ccdc462fc46442060400e6ab176d\",\r\n    \"0xb818777264db21bb2eb47661985611e395e9685a\",\r\n    \"0xef5e7cd8e6ef8726904cfc24f3af5061f051d045\",\r\n    \"0x2af0a604e1fe69c10940b01fdeca4457659feb02\",\r\n    \"0x19a7a66d15164c1e53438dbc7fd888b672ecb100\",\r\n    \"0xc174ba480e14803fe399a0549ab48774bed45c72\",\r\n    \"0xcffbe435f882e6dcdc33b1e5cbbbe44eace6c5b1\",\r\n    \"0x85da55cff5a96d6527d4d32ff40cade3a042d530\",\r\n    \"0x434804974eee4682a83935d54effc01b79dc75c3\",\r\n    \"0xf13924c8d4e7474aa8cd73ded1cd3ac521b601a6\",\r\n    \"0x7bd83885010522a96c32fd1db6eaf8c69b05074b\",\r\n    \"0xa464d2113b1636a7a39a5bf5a0b1c3c9c937ae3e\",\r\n    \"0x4ea2ab21ed5e07a8fedeea69ca335ec0c03508fa\",\r\n    \"0xaeae6477724fd69948f0506a09052f07d430dc26\",\r\n    \"0x928bffef5d30ea679ba86bddebf963c80087e4ab\",\r\n    \"0xfc3bd1092edfd75dab05db7ed2f6f9bdb116bbe4\",\r\n    \"0xcd04bc3e099dc02cc40a3ef749e231d74ae50bee\",\r\n    \"0x262a430e7eee7bc537b5875da661d939f9f99678\",\r\n    \"0x56a0facac1c35f07a25d78f41dc230c4ee807d55\",\r\n    \"0x9976292c0fa31c652e513d8881496ac57c01bfe9\",\r\n    \"0x34979db0945d35a8745455872271e836cb7d4625\",\r\n    \"0x24e85232748ce5e4078587321b56d5d8c76635b6\",\r\n    \"0xcdc7b771a0ef67519cfeba630451bfe1736ef344\",\r\n    \"0xadf56bc1f4c04dbb6e92351ae5576d04ca3e135b\",\r\n    \"0xa738a71f99a5199a9cdb09fb6e17cfba5531c499\",\r\n    \"0xabd32453e8e965d64210eb601df082486bb4d988\",\r\n    \"0x2b1f30c1a4866739af6d5ce5a2a450831b8061cc\",\r\n    \"0xbae9dba0128d4c16746e6dcf68930dbaf4927f27\",\r\n    \"0xa9bc9ca9d142dbb592951c47b417d814b6bcc91c\",\r\n    \"0x83902d4f0e713158a87e720ddfcc79a78aef4cc7\",\r\n    \"0x9a387307f7508de113092bafc5cb4b3ae0706521\",\r\n    \"0x917ffa70897949dcbb1d2214fe57b218178d9361\",\r\n    \"0x00bdbfc896c42845974ec2bf5b025afbe4fd4221\",\r\n    \"0x4ecedc066f15c40edc7f9e185b5cda6bd229e13e\",\r\n    \"0x77278997d32a4da8921fb26a7346f8877091d704\",\r\n    \"0x5526af4213cf071cf059e70aa71af37b86f14e7e\",\r\n    \"0x3fca616bd92dea0cd0034b0c8da6d3e6557ce99a\",\r\n    \"0xea53454b8b70295d35de50f9393bbe89e32ce9ab\",\r\n    \"0x4369970dbce089139fe5855323c0cf4cd8b8a2ce\",\r\n    \"0x050da6b90cfcfbe5d26e9533e9677b575f67d831\",\r\n    \"0x3b2b1082822b4ffe836a18000b0981966a101569\",\r\n    \"0xb31023a8d4bae5273ec3fa5a49ebb5e15e908d85\",\r\n    \"0xc9dc94395ca78fb4ec63a8a79fd5d07a0622f9b3\",\r\n    \"0xb4f0c739fa3c9fcb577b7002d8c292f2078fb14f\",\r\n    \"0xa3d9b1456d29cf335371440ac73ef5dd9e3ed0f3\",\r\n    \"0x4872595d87d97b82410ce39700b0165764c68458\",\r\n    \"0xdb6d2bc6e3d0fe22e7343e0d90df1f5cf88046fa\",\r\n    \"0x79e5b3a11e774b45ea345d66f73d70430a1cb923\",\r\n    \"0x19da4d36184dd9022e87423d009ebf8fdebd1133\",\r\n    \"0x1f3d1d6176d2c88d0d80fb43c861b371f75d7a74\",\r\n    \"0xe0451e299b949bcf8b46a70b40d811b35a648b56\",\r\n    \"0x0f7e1ef35f822552597fe9d2eb44ebb00bd01557\",\r\n    \"0xb75d1a05b8f80848a8e46776f9b152042ca47225\",\r\n    \"0xc063e1712eb7df04876cb375c9cf84da1a6e49a2\",\r\n    \"0xa510c1f83fca67c1073061145df6e91498bde314\",\r\n    \"0xcedb7005de1866513ca189b296a405ec1d077bfa\",\r\n    \"0x94f54217917c8e2bd1edc5fd136d2894445e1853\",\r\n    \"0x02f94ff1a701123b7ba2d21f0829cb13cffe0e8f\",\r\n    \"0x0746812bac9199594a0beb1343017eb69dd143a7\",\r\n    \"0xd9539ed7d258959e2fe111b1c5fb0cf0e34447db\",\r\n    \"0x40e61c38a87d7e3b07036c39dd86f7f955d4bc35\",\r\n    \"0x4ffd356143a6962215649c6c0d2ab35fac23cf90\",\r\n    \"0xf91fc89d93522163926c929ad0661e3f24da74a7\",\r\n    \"0xb69fa754d71a9f8e028b063e2db12a623e77a308\",\r\n    \"0xf4031e0c534289a0f4e963fa6b0ffb6fc8848d4e\",\r\n    \"0x9148a62ad8a1a46af121cbbac27d69120acc55e7\",\r\n    \"0xc7561bc30a740c273dfc6080c5e99d54854ccdb9\",\r\n    \"0xaaf5d478fe2fdcb9c48ac76f97f9de797051d2bb\",\r\n    \"0xbd71a0393c44a28fffc853654e9b20650867b963\",\r\n    \"0xc236f9f1b89210155afebcf1b78ace32aa28da03\",\r\n    \"0x3efdd95a23b40ac867dd5a81612c6ccdbf93a8cb\",\r\n    \"0xa86a527b756e5c7d9b418c9f2dd3314c9c4ea443\",\r\n    \"0x693266b4180d90eccd218cef8c16bc90753f6e7b\",\r\n    \"0xe922552d93a0273693545cdb6c417f41b4e3b614\",\r\n    \"0x37d945166a68213c7bcfaa23b84f469e75644199\",\r\n    \"0x7a6098df142c71caf34d92e3463bfc9f31b726d9\",\r\n    \"0xb397f8d03a8760e97e18896322944e5c68829514\",\r\n    \"0x936aed74f7e0d2e8aec8983ee7d77dc44bc4e7a4\",\r\n    \"0xa343b7671e8b2ade858519c4b8ae340af8e87586\",\r\n    \"0x42f990cc367732fe223855ff46e1f1cb8737a565\",\r\n    \"0x5a79f2f1604aaab48bf9784b4a2ef83bd5c5d82b\",\r\n    \"0xa03d0e675a5d587f625e1f7ef4ce5d5ae6f0fa8f\",\r\n    \"0x58d5d53681689751d99c2ebdc4bdd8bdc62a648c\",\r\n    \"0xfb6bcd0322ee938003a381c6ad45acef136c926e\",\r\n    \"0x6bdd7fbfa1f4c617820d7da3327d1bb8a0b00e9d\",\r\n    \"0x0472dd959ddc1317638f9887680d0a0da1c66379\",\r\n    \"0xf1eb61a45a362f06d4794a592846abf28868389c\",\r\n    \"0xb3771302700cc6e58677f4baa3446b13bdb27ee9\",\r\n    \"0xe6f45f44c854e9fa26bdbeabbe9502aa105607c4\",\r\n    \"0x400ab604df5501a3e761b0d3ceb18d1742fc2ecc\",\r\n    \"0x3d069e1b21ae733dc21e34941cf6e42771616111\",\r\n    \"0xab43b3551eb75aa7a2dd1740e1865f79690c314f\",\r\n    \"0x87f8f7371756fb9016a7814455885a6cf086aa80\",\r\n    \"0x093d8712d6445c9decbb1c0adbc5d1ac08870a48\",\r\n    \"0x90774f72029c8f936e4d53b644d7d9c98370ed9c\",\r\n    \"0xcf796ba21de014afc99cb75eaf2b6b5924cb54ef\",\r\n    \"0xe3aaf3a1988af978f71f476e227c3f6e482a888d\",\r\n    \"0x5f5acd57dc1501d5125faf5f3d3ab393905384df\",\r\n    \"0x7cd2c89542c82b3fb0294455f903efa7983ebcb4\",\r\n    \"0x98ebfc5586e6d8b84c540c8b662d8514e9eb56aa\",\r\n    \"0x7aa3c44da0ed1892438506d561c686a65496d900\",\r\n    \"0x9fc932979521cbb94493581aa3da402b550f9f3c\",\r\n    \"0xdbb21cf6549f9e78854661a35484f322b422d20e\",\r\n    \"0xd13f31d5cfc1b6aacf5d65f7456a0c7bd9c1c3cf\",\r\n    \"0x3a1131fa0e6617d47fc9d12d4ba143a10e441fcd\",\r\n    \"0x13485afd9aba50174fe7d37776243e6f0bba1833\",\r\n    \"0xde6bfe03ba725724dfc8325e6c97a9d1e8f9fa81\",\r\n    \"0xea8d63a020a87f9e41ed825ac157f658bfcdb3f1\",\r\n    \"0x7ec6b62a6da049267f3a8e84e84d0f8db0139d4b\",\r\n    \"0x08f3077320e1622d56e43dabee754b18ee6731bc\",\r\n    \"0x4a563b5d2a4ea530f855ed3cf57d11171d578f4d\",\r\n    \"0xd256c34cc468ae3a11fc70a6d7f6ea80b5cbe422\",\r\n    \"0x2d13621b084f80e5ed1f6ab85d36abed3f0417cf\",\r\n    \"0x0497f9189a5f383992a7a42fdd2ff6cd53732f96\",\r\n    \"0x18a112700cbdc3691831c364581d799c8f8d9361\",\r\n    \"0x658cb3b11dce54d5f9f69a6157a46e9fa16519d1\",\r\n    \"0x0f3c93ab086f4718566a7aebd0a44892b20be9b0\",\r\n    \"0x5758064d3cbca7467e54944c56a59c620611c7e4\",\r\n    \"0x0f85fd3c52a16667e4d1e91e8a30023c712368d0\",\r\n    \"0x3dd5635f59f0b23a48a64e904cd04b94992283d9\",\r\n    \"0x5ead0f733d4c9a47ff3063ed173d0bb5ca5da1ed\",\r\n    \"0xfdab72ed6b2f4f1de9b3c9678fd06f507495a8aa\",\r\n    \"0x0fd603f4d548593a0d0d45f29ead3d663de33d9c\",\r\n    \"0x602abeeb01d3c839b7d093dad299ad157cb4f12f\",\r\n    \"0x356a9ff0ff8d2cd750e3f742f162f6dd84477af5\",\r\n    \"0xc4ce55daf4ec621f9cf6f363acf7b604e4fb60d6\",\r\n    \"0x0f7532944afee98834d6fc486ea3e18f7c1d3eb0\",\r\n    \"0x6d5e864ffbad022bcb52bd253553c3727922c965\",\r\n    \"0x2c5782de3b3ea3733bf58bc4141a37122f8f8665\",\r\n    \"0x684cf4ce9da7e13552aa977929304d2146b2184f\",\r\n    \"0x2bb34faa81d052efb56f8dfd7229725d415e6377\",\r\n    \"0x61a61e518cb52f901c2ff79a4210a57b3d839787\",\r\n    \"0xa9801e4db623f36442cb1528e0fe05e742215284\",\r\n    \"0x75eb16f9f2510661c6d69de215247eb6f4ae95a2\",\r\n    \"0xa4adb185391fa5894b0fc881c6523cce5c5b133f\",\r\n    \"0x0593e95015453be05fe7ab5afc29259920d894a9\",\r\n    \"0xf53e93b14b765adde2f9a1ba50c97fda80b1d7ec\",\r\n    \"0x00ee57a1b3ccbc0d0f42b1d3f203fb2b9ebc2bbf\",\r\n    \"0x87f0a8e6b858114cdd7c6b7f4ada4d233a3cc4e9\",\r\n    \"0x8d3326c5facd9ec978deafced2e718fa7d59ff49\",\r\n    \"0x9a52b7392a33702f8999ae8c03e36ce498ebb0fe\",\r\n    \"0xb95b054de8b454caaf9561acd3c12306b88833b8\",\r\n    \"0x522b059963336de4b2fe2e1b5f8e8aa515e40748\",\r\n    \"0x0c50ab795fe9ef63efe651d2d667ae8a0472d380\",\r\n    \"0x747a2af67a5805852512dce3aed5315186921af8\",\r\n    \"0x1959c1b0dd4266158224663172b8a5cc18f72c87\",\r\n    \"0x0e4cb981aa087847ef0c9f0c0989d884a86d04c3\",\r\n    \"0xf01184def77e906cffe13327424b386eab64287f\",\r\n    \"0xef428fc7e0b7dd6312dc19ae3eb3cce852f9a3bf\",\r\n    \"0x67eccb41f99d8c0eeac21f7e431d0c0282cc02ce\",\r\n    \"0x7ccb5e78050f301f022de4f615435f409c9680b7\",\r\n    \"0x1db3e2b15cd20c3b45bdce3ba9ea4b4a2259cacd\",\r\n    \"0x29fba623f59ee4056fd7b17158c0547ae5f85abb\",\r\n    \"0x641502672883d3e477f5a282222804cd7982a162\",\r\n    \"0x166ad33535f45f7c43717de444e45d9837a81e36\",\r\n    \"0xd5984e74bfd57b9ad98d06209561f82eb6599eda\",\r\n    \"0x5676121ad60580d6bdf35f7dc1f32d6a74b0dbaf\",\r\n    \"0xd5e3af1ff853359c8ddf1c19acd472c2da307cb6\",\r\n    \"0xe061d68fd68eea3a5ca726f0abc9573092732318\",\r\n    \"0x3b04e03b54f55a5828c0cca8b24a70bbcbeaca3c\",\r\n    \"0x23eeb9b76124ccf5f7746c5e33aa9699d21ddc31\",\r\n    \"0x20ef16fa26ba6d162e448abd4a69fbd7a16ba19e\",\r\n    \"0x0f3d3f5f4dde36b612c3aa46959ad1bc0b100edd\",\r\n    \"0x6c90698e102796d1a09d8feb4996c11b0140fc9a\",\r\n    \"0x7b61d0d4a04e0118cc0f7239381700d101583be8\",\r\n    \"0x31ba5b9d3a8e3dedc594c95f02da4e751619e4ee\",\r\n    \"0x3f5db0caf75193be63c5ee8f9c9c3df7ef6347c9\",\r\n    \"0xe8de739514a7320550079e91ff7d6ecbd1941855\",\r\n    \"0x11d16824426cb6ad91dd92274f3618ce8e38188e\",\r\n    \"0x787fe1da67f6936e9c281b14e4d27dfef6445def\",\r\n    \"0x25ef8cee69c1c85640317e09f96b0e5aa257001c\",\r\n    \"0xac146644d3b4903025e15285ce02a74965c75531\",\r\n    \"0x99b78b6a04b0a4081c2fcf8bb3c0c6cf6d6dc7ad\",\r\n    \"0x3f32bcc19279a6154d7a8868aeefffbf244b122b\",\r\n    \"0x910076c021fa3c4077cf3ff0d83fe5c6a639e664\",\r\n    \"0xc5591dde9f081dfbe680d979c94bcbbc5ccfb61e\",\r\n    \"0x0ff198b1757f475cb929462e3c819366f1330379\",\r\n    \"0x9913be2a26d233888582dde80f982f1a95283f62\",\r\n    \"0x8221ccc34ab3a0efeb6ed9158edd58afae384a80\",\r\n    \"0x410eadf722886fb7480741cf2e3df0da3aa09440\",\r\n    \"0x0a967a666d685dc758c8fd8eee3f4bedb83faa6c\",\r\n    \"0xc99055e77e43e7902e7ee12514335dfe9ed299ed\",\r\n    \"0x7691ad42847b5bd92f4ef1214f77b4a3ea4c48cb\",\r\n    \"0xde0be63f1e3e3de63a5ec2f22c21c791a6362ef7\",\r\n    \"0xffcede96e698fae48112f042168eac381aeff84c\",\r\n    \"0x6fb8712b6447be3524a101135052b166e7a893cd\",\r\n    \"0xb286704caf1ec42d0040f33ea668a43c534f078a\",\r\n    \"0xa08d72c02422c2372d18b9cad8e34243e3d54bb0\",\r\n    \"0xd9411e6e41e2ce997b0d1803b660b4e06ab05b94\",\r\n    \"0x19654d81fc838271bc621437940ad27ec5c9c6bf\",\r\n    \"0xf26798413ce486baa071552a166160c10dbd8184\",\r\n    \"0x3083e52adcb0f9550d4e932ad053d0e339562873\",\r\n    \"0x459e8c7a10fe3e1537a94860fd65f011990e14d3\",\r\n    \"0x70f2b99f5f9312ec3176ede9006f84c3e8f6de9a\",\r\n    \"0x02c176cd7d7d4c277dbe0fbfb18ff63b7e5e8c9d\",\r\n    \"0x046feaec6f31fb5133f4f29e742af411dd99b62b\",\r\n    \"0xb6944a879d415710b6a4ea3c4a2f68675621f885\",\r\n    \"0x53bb534e0a866fe2b8c83583be38183b68afd5c1\",\r\n    \"0x869f94f182438163d527a14ddd1f11fc12e4008f\",\r\n    \"0x586fe1dd9ac839823ad426224d7e716b91e63c3b\",\r\n    \"0xddfb1a048259c47e9810ffcdf969e84add44256a\",\r\n    \"0x99d91260c714f50a2c4efb9e1d66c11b030a7b06\",\r\n    \"0x1c9063fb7e0c6a90b7bf2015953fd50fe55e248b\",\r\n    \"0x77cf86295ce6e7bad9b77a9edfff1a578914d469\",\r\n    \"0x970505351c85cd7506d4a13c7ff89eab734e6945\",\r\n    \"0xa4ed5d11895b485b2ab68a4c0bd2c994cdd1c255\",\r\n    \"0x5880b01b98ee9a315ed3dc004d63023895a8bc4b\",\r\n    \"0x60c0a4c6a64ca98a329efc2edabd7dfd50d3159a\",\r\n    \"0xe452316201012a3c4528dfe703319e92ee09ab4b\",\r\n    \"0xa17b2b3f6d31c79a401934a6d815c617bfae6f71\",\r\n    \"0xf8d28048c8dcf7fa6bfba6e2b5f3e914c615c1e9\",\r\n    \"0xeea21c0fb547b5dd2245ca485586a119aa6bb32b\",\r\n    \"0xb328f59aa93810fe0047a4bb29de1131893d0106\",\r\n    \"0x3bd7429c40e24af6c1604e18d28bbda0a2133ade\",\r\n    \"0xa2639a1d5da486b0696d5b60a0a43558d28a63c5\",\r\n    \"0x9f81471e299e9fd4507c97def3e778ce2175186a\",\r\n    \"0xdbb2bf884855baafba362ef2bf31561e8953768b\",\r\n    \"0x1fcc94aca7c4f8d9b80d51ca31fd158a34203e8f\",\r\n    \"0xb4e5a758a5e93b1b64ae9d7c5fc5727b8852f1f7\",\r\n    \"0xd8e0e9fe868386e7a23465233f1153638abbc32b\",\r\n    \"0x4f501bc4aa15f4039d3251e52937126b21e5cad2\",\r\n    \"0x8f3226c4e136b1339f1768c1177a50489c0b40ed\",\r\n    \"0x8014cdfd49d249e2d634ddc1c8d74614419abff8\",\r\n    \"0xeb850e67fa531c9c0cb7770410cd733c59c69d60\",\r\n    \"0xd1bba1de31c293a113157118e602502c13361122\",\r\n    \"0xe27a4c6dfeeba974d116865fc5700af034c0c841\",\r\n    \"0x6cd8945c37027817844ede5091cf798cf6e27d6e\",\r\n    \"0xb43e9ae4bb3c3afc47d78852a7d46f805ae3d346\",\r\n    \"0xc616ed9ccf1bc4c50e3efaf598607969d705760c\",\r\n    \"0xdb685c25e862d078fa9a999ae8914c8e66a5c800\",\r\n    \"0xc488af22aea3a894d0252ea8febe6633fb722307\",\r\n    \"0x39c0282ee43fba5a91e0397e88add395e5e9f3fa\",\r\n    \"0x883ce32e186c69559e94c8ba276bfc4322fc194a\",\r\n    \"0x8c8ffb0b9ffddc8ce37d21507f62152e544147df\",\r\n    \"0x94839f81be491b2bf18a3a4fa7af4c6dd9a198e0\",\r\n    \"0x532c04599f712685453f324334ff92914799b1e5\",\r\n    \"0x60ab770a1835390ae586b557e6e8e99cadac91ca\",\r\n    \"0x2ca42dda1f7278b6fd881fa4aa993ff4adfd0b74\",\r\n    \"0x8f90df9be0666ac390dd3bdf05f18e1f7f785fea\",\r\n    \"0x91335a36e575f3d90fdc0dcb0de3d175d9910b80\",\r\n    \"0x5ea3dc96290978294c6698cd3b70fd48a7ec8dd0\",\r\n    \"0x5d13025a91bbf377079ccb4b2ebb324aad787b85\",\r\n    \"0x6537611cceeeb40111f5674ec9ef9664b089c800\",\r\n    \"0xab0dea681bd8648ec853505c55c6ef477e5552f8\",\r\n    \"0xa4462b4f4916df4043514be7f234a03b05181440\",\r\n    \"0x19743bc91b19a62e6d45a6664b60a622cf075a98\",\r\n    \"0xbf50aeb82389405d8d67beb228d459c948613f9f\",\r\n    \"0x752684cfec2731a60e1716cb21f8bfa3e475abf9\",\r\n    \"0x080c7750719f7e209b6bbd64445aae46fee8ab68\",\r\n    \"0xb6b0bf0187888cfede6eb7a5e0ae94adf768276b\",\r\n    \"0x075abd1d80f72a376b8baead2079201f4baa2c02\",\r\n    \"0x3e67b2f0dab3a44172944569580f516ed1358dc7\",\r\n    \"0x35809e8c4dcb5e200ab79044b7ae9115529a167c\",\r\n    \"0x1fe82be17b77ada40fce738761f1c1bfc8b20056\",\r\n    \"0x6c5de8839f396809389cfd66ad8a557a8446ef7e\",\r\n    \"0x433c9c68a440e7cdf021b3c6066b7c2bc1a38ad3\",\r\n    \"0xe58aac6fc9e47108ae182b167b9484206892fb6a\",\r\n    \"0x164e5558b1d9b3f3ecf0ad42c246b683cd09ca3a\",\r\n    \"0x6812e2053544ceafccd3170bb463ae94eb4ed61b\",\r\n    \"0xb81272c79cdd4c73f4f6a7d39f74a8e4f60cf101\",\r\n    \"0x4a86aba8db485a4c3e4e1e035d112925ae76313b\",\r\n    \"0xf521fa8de7d7d564cdcac01644dfa4a8c651b929\",\r\n    \"0x75f14607218dc771fcac61a01ae86507b9d8fdf1\",\r\n    \"0xeb5dc33d3828cd0b8659251942c571918f3ba4d2\",\r\n    \"0x43ddc997ee324b4afc6605d8cad3568863d486b7\",\r\n    \"0xded4d6e36d05dd29c3ae702ae531821ec39c9ad3\",\r\n    \"0x547c2d390cf3e7f6e63a0deddff81a734f90bf21\",\r\n    \"0xf0716d8ac2b930a48f11012fbf29063df3d0f010\",\r\n    \"0xc45d82962c9f5a32240b652bffc17049e1144e06\",\r\n    \"0xa67fd90ecc5a6fb277a8b44d7ea89f42deb05566\",\r\n    \"0xdf75aad4a467ba4876adbae0c089953c63d25c67\",\r\n    \"0x85a6bb09b9bc9a30a42afc6d0046bfc9b85b0fa5\",\r\n    \"0x99e03deb3c593bef7e6c5b18fe730144d487ebb6\",\r\n    \"0xf8475e6acf2a6f5328e2370ec3a778acf41d52fc\",\r\n    \"0xfd762623c54b21519d08047ab930e68b0cf19a5e\",\r\n    \"0x2738d50a66200d9288c1d198d11f17a9fa0df004\",\r\n    \"0xa9dba1007a35086c19161ee14e3456faad1fbdd5\",\r\n    \"0xc1490ace8c1805f98b309971dad72503167a6fa9\",\r\n    \"0x8b95923f72fe2ee87b9eb0635c4bf2fa7dcd1b2e\",\r\n    \"0x0d7fe036099a9affe91b1c7069c227995d0a40db\",\r\n    \"0x558cdae7df3f6663024d87bafcb728d2b4aaeab1\",\r\n    \"0x4da8b5cfbd551085ba1a479200c0692e74fb1010\",\r\n    \"0xc9fb0a66d90c4145664ea0619ab177649e1649c3\",\r\n    \"0x0b4e0577158cc7afe6343f25068c6dd081f1d26e\",\r\n    \"0x4381c6f1056dba9c36febd002424a350e8cf9f4d\",\r\n    \"0xef3273fa13b0952f265d38c76693d71fccd87906\",\r\n    \"0xd448cd7d2631b4fd492476eda73808acb8f9d064\",\r\n    \"0x34f427088c1c374e0f5f74ecb3f79106cb9f2c00\",\r\n    \"0x9518f0dc37fc11475fffc5b02c7d708d1f23fd01\",\r\n    \"0x0a1400a307958409e09b6e7204a792a18df7491e\",\r\n    \"0x6526316144686689f8b0cbd43ef607e0185f94b1\",\r\n    \"0x2e777f272d953cf8bc259ac07b6e3c98b8a80578\",\r\n    \"0x9e2e4440f7d564fc995feab7421c8af5f92c6134\",\r\n    \"0xc801f64d017f438a6cede8b59b763cc86369c458\",\r\n    \"0x2407bfd42766f7dc89c6105826c0246d0b909898\",\r\n    \"0x6b4779a49eaa437b74da77ce230f4c42da4dee39\",\r\n    \"0x69180d0598e43ceafa2cf7839926c18c7b271f2a\",\r\n    \"0x6d1343296d1ab08211cf7f00e58b8a3a2b6c30d9\",\r\n    \"0x62e9e01d6f53d921d66662fa7b61d2c34745adb3\",\r\n    \"0x2df12914f5226146438dbe6543e67f3cc2998972\",\r\n    \"0x134de579ea7adf7e1c4b07c2eee1ae2a27758d40\",\r\n    \"0x4771f9eec0af0a4c23e3572244a6fd1a31d06a9d\",\r\n    \"0xa1beb2fc1de5eb95668f11353bca017b8ddee441\",\r\n    \"0xece3d90237533bf50a2aba069cd52f72f3270ab9\",\r\n    \"0x1ff013164dc75445437d948e3a10743b4a25d2ff\",\r\n    \"0xacf61b2db110d23d836a387a2a2224e5a87aa0f7\",\r\n    \"0xa6f53d506034c8d4802923235deebe5d88e7831b\",\r\n    \"0xcb074a1f9b462d9bd0cca7a054b9262d04072d86\",\r\n    \"0x6d7b071f6c17662dab53ea2a324911cc2b8c187c\",\r\n    \"0x232308f9b88e0d88269cfde3fe8742e437baad2d\",\r\n    \"0x464662a6410c43334fb8990e8c18ca2de60bf7ba\",\r\n    \"0x2643fa896fb783debdbe105fd8f0b02ac6bfc0a7\",\r\n    \"0x5a7447484c647fcd03f4dfeab24be3e4c93cd895\",\r\n    \"0xe4a60b876403c990cf497ba28bf64d7fe78e8324\",\r\n    \"0x1f0fc95e4a91471c679f8dc378e0b2a8a16c5135\",\r\n    \"0xa15a04e18489821baad1e3047badee779af29a74\",\r\n    \"0xa127bc360809a830633ff12a20642e887c35e3f5\",\r\n    \"0x9f7a31106a01da09564630496ed52f7a6b801d04\",\r\n    \"0x866704f6c6498d1cac89513529ecf9002f5812f0\",\r\n    \"0x15528ead153634dd09be10c66613fc5b20e5f245\",\r\n    \"0x22b8b75a0e636363047fe9e6ae1a2122e57d696a\",\r\n    \"0xb23b08bb96b43869a43d9bfb4d60478b884186dc\",\r\n    \"0xb3d31941c224f5aba67f435c810f22569ec10577\",\r\n    \"0x9ae90ac5d7f63bee9eb5ed7f6417a416f782384b\",\r\n    \"0x47b84595c14ceb926ca0ac0e1dca3a56f0f50bfb\",\r\n    \"0xab172a34e9f95605f82b145ccdee8868e189c249\",\r\n    \"0xefa35c36ad2ae3f1a35818a073c8bdabfb43c1dc\",\r\n    \"0x260121ef8ba92bea39dc43e2e708b2af5f7166b2\",\r\n    \"0x389466f35249bd07828a669aaa1a4ac4653c44a6\",\r\n    \"0x21d56406991a6cd86c9142b04a4e2076c5b4f095\",\r\n    \"0xa486212af7bda08ab940190625a83bc04a8cbbbc\",\r\n    \"0x2e713a93ecbaa1c2d91d94c0f0a5f03bf42c04e1\",\r\n    \"0x08164903c7d278ae1f247dde3f26cc67619dbcd5\",\r\n    \"0x99963c9cc854cf5760213b23df7354bb8774ccc9\",\r\n    \"0x91ea44ea77281045548b8fbfcb488002ac0bccc8\",\r\n    \"0x7a7a612a8fb2e91db9ee420371e2577060838aa6\",\r\n    \"0x2c23c276b148cbd7ca31c66e177dc69d9d90845b\",\r\n    \"0x44dcb66cc45245f20407cd29d41a238300d7cb78\",\r\n    \"0x798213a5e4a5750b17fcca8468ddda70d41382dc\",\r\n    \"0x73b1dfe02ad046bf3d16358a52f9752a2476447d\",\r\n    \"0x4ab1a6b27a7f51ff689df858e45bc68bf1c33d3a\",\r\n    \"0x7c80fe9fc7a094a2c8caf5c45f613ba07817ce7c\",\r\n    \"0xbe504a0898f897f265d57c0952c161becac69a20\",\r\n    \"0xfef071f228dba77ec4d8f07baa91c2a9d09e0f25\",\r\n    \"0xf1f097e920fbc57ddb49bb7a05509ab9c3891e2e\",\r\n    \"0xac3d189f03ae354b50883a5500809d872a416fba\",\r\n    \"0x6854724de1925103bdb595240497b7dc9f215b39\",\r\n    \"0x67aeaef40ea5ff026e78abe44a3b63a3c56c8f8c\",\r\n    \"0x9e005775ca1a2cf3cc1e2aaca5558540900b581c\",\r\n    \"0xa0f2a8739e9afc1b8fc6201a24691f8463768651\",\r\n    \"0x7f949e1c77962ecf9ec95f1c96f3076e06354aad\",\r\n    \"0x5d79f3c9edb4f77e9e523b0abd78ae96a3188257\",\r\n    \"0xb7db081e8de1f7a066c9eb3f511ed050d7a348b2\",\r\n    \"0x3121c69488d8ff703508b1ac2549996dcb3b6a37\",\r\n    \"0x9f1254e22ad80a728f46e3d44bcf06caf9ab4635\",\r\n    \"0xec58eeb5527a1c1cbb0b79de1f9f94109bf9a39b\",\r\n    \"0x1a07077306a87f568cbe846a885b50c254f75677\",\r\n    \"0x81bf335a15988043d6c6efba8f9aec8f4932b555\",\r\n    \"0x9bfab36f13dc1379e6f8873aefe50b9f857027b6\",\r\n    \"0xe1ec5efbc608f22918d2cb1205e8a3ff35cf11b6\",\r\n    \"0x2a5c4fa8e1ff1b45fb6c59714a24de562bc044e0\",\r\n    \"0x8d9bcb5b1511c6c8a087caad80df98b672f2a7b9\",\r\n    \"0xeef49c7f6c7e3158417236de1304d4220fae8b3d\",\r\n    \"0x48d44b18cf4496e990846afbed35605d53963854\",\r\n    \"0x7278c0fe4ecb7a9ed7565012925271a03b29aaf7\",\r\n    \"0x73604928446cde965f6fa9fe8412a7b0667f68ec\",\r\n    \"0xb519685af2beb630ee84069f1870542fc8c92530\",\r\n    \"0x7ffaa6e0b9cad10930c36a50f81700130bb71be0\",\r\n    \"0x67dac15a5596606b46f101a601a58e69c32bbb01\",\r\n    \"0xb91253972e441c2f29920570326f148df0230c1d\",\r\n    \"0x794c1e41f3b9683c05f5300598a1c74908dcaa7b\",\r\n    \"0xc1d34dfa5de10959487168feadb460213c872f98\",\r\n    \"0x17a3a1115a87e8b076af5e48693e31705b99bdfc\",\r\n    \"0x8f341b2577750133ead294cab38c1204c2d5569e\",\r\n    \"0x48916d6e8e79ab50ec50972ac11e8aaca3eb9d4d\",\r\n    \"0x9f85696c785328fc1695dc83faa4ab9e825176ac\",\r\n    \"0x4e4178ac15ef85c6fb14168b3630bea2decd98b7\",\r\n    \"0x1add3cb862ae604855fa427ab5e77f2b3fa96510\",\r\n    \"0x7733a362772171f3188481b797229653f8f28e34\",\r\n    \"0x62f4c10d44c37f290f6b1129b2038b06de4306ad\",\r\n    \"0xc0dcc0265771589fc550f8c1c691efde4b7df8d2\",\r\n    \"0xbbc58d391289d34e9c6a3757fdc81cd57fc99c88\",\r\n    \"0x3d001d2f47e6c84cd46e3d81773790c430336ef4\",\r\n    \"0x80912eb15e51588afa41cb4b629f34df45bbc57b\",\r\n    \"0xb226e512046c73b6c20b72cd1d1bf63ce2546668\",\r\n    \"0x564d5b1d0409538a441b98622e51cb98b0e6f1c1\",\r\n    \"0x6b585eb137d58a5a426a2d37978e66cda75a68e6\",\r\n    \"0x560b18160597b22dad8b8840b99025a4b2e331e6\",\r\n    \"0x7329166255080bec8b3485796968cf06b98c8c44\",\r\n    \"0x71bb8bbd2f602d3fb587bf237396bf6b4cbd46c8\",\r\n    \"0xb9ba5a5363face0b2cda56255cf52ec8207964cf\",\r\n    \"0x32291910c43ffff5946caa8f764dab5b39d67fda\",\r\n    \"0xbbcadb7518f5365bb8f3c1eeb0d36d310f338553\",\r\n    \"0x8a4b7a8fe147d2627a394b751dcc81aa34af23f2\",\r\n    \"0x72931cbfeeea79dfb20bec68ff32f7439d08d5d4\",\r\n    \"0xf7b296bbd3a7ce6377dcb8dc461e8ae4314ee30f\",\r\n    \"0x544b43bd8cfe898680f5d6b5cf9009a01e7ef117\",\r\n    \"0x7d540c92139b9691100f1ca80730728cbc20d5a2\",\r\n    \"0x34decd21f0fbc2ffa38757055afc0237ccf94a22\",\r\n    \"0x85039712117a0fe4790758cbe559d35e95b68414\",\r\n    \"0x679c7ac71092ed1fc1b568b99e5797ccf91f74f5\",\r\n    \"0x0c0299590e80fb1df9c21b63800c3b9398996683\",\r\n    \"0x3870e34cac9fdb55736dd5735f152c6819df68c6\",\r\n    \"0xb3d3fde3d2152cd2fe16b2a00a74ef3ca99de1b5\",\r\n    \"0xdcbd6efa41dc6268b1a8293dd64e5a20808337fb\",\r\n    \"0x23d25352b4d29bac61f1c36616c4e55809895986\",\r\n    \"0x8a028febdf69e39fd4ca80431f00ab462e6e0a03\",\r\n    \"0x734967d5df075229c0e98176d5a13310da4cfbda\",\r\n    \"0x91cb45b3a76af6b6fd4795f5af026e00f6967524\",\r\n    \"0xb6cc1269725066bb0b0820cb6f4265359e752ca2\",\r\n    \"0x8fb0a2135ac6ae782685a2192199dd1395013ff7\",\r\n    \"0x95d35096ac77e972cd6c44c72d73b691d69902fc\",\r\n    \"0x688ee3ec76df352b045395185ffcc8eab81446c3\",\r\n    \"0x12ed608f1964ba0b46fb2fa36912b18189e3dc53\",\r\n    \"0x9fe0bdfb1ac9b67192fc7d0331576c0bf077bcb0\",\r\n    \"0xb1f87a2e4ed22f0bbef378bab670c6f56e55e96e\",\r\n    \"0xa1b85f654e3b6facfeefcdee8a99c1ce0d29a616\",\r\n    \"0xa752579aa3b63ad6c1608a1998cc40b99280b746\",\r\n    \"0xa27fa2afc172d4972d6308bdebe4e2180b2e7a9b\",\r\n    \"0x989d4876da6f646b605f9d8a659cdf65cb055fab\",\r\n    \"0x2445c657777a20152f4d86223990f08b1a4f10a5\",\r\n    \"0x2afd8398941ee8ac00c48cfc0b6a4b273f74aae6\",\r\n    \"0xa01b95650c8219d454aa3f8bbd2b4a05672d5865\",\r\n    \"0xd2dad3ce0f87ccc2c25e05570cb7baf50bfbb411\",\r\n    \"0x72129eec9fcee11d8cef61b65483eb090180dc7e\",\r\n    \"0x1607b592cb121de687fba0455644eff7cfcb8e31\",\r\n    \"0xdb73f9cd58d50678eb49a682cfedbdecd764d70e\",\r\n    \"0x34b053ef850f952c08bb2b35ad2efe6af65905c4\",\r\n    \"0x09175e530295aa2b6cc42e9a43c14b58b662897f\",\r\n    \"0xe647898eeca8b8e564c25f19416767ee22bc953b\",\r\n    \"0xe469b126c8f013501933d28ddcc2d99e913dff4b\",\r\n    \"0xb9f1b51ccb69de1be649c1efaf04b7902f8079fe\",\r\n    \"0x8e49ce8d377cbf2a060805cda5ca500fdc705734\",\r\n    \"0x6b9a9b707e018a8c20db1588ef7a7421ae6ba72e\",\r\n    \"0x2532377a22b947c1505ec9765cf4babf34a4f255\",\r\n    \"0x1c690791075cb2052ca10ed88d0e6ae1a885edd0\",\r\n    \"0x1b941c8618b22d37b7cf74f193e03a91afdff051\",\r\n    \"0x3e939f5bad26ad980b9cc054eab4ad59ee41f329\",\r\n    \"0x04ecba9ba49d271b62fdce03f9c78fd8f81f6537\",\r\n    \"0x4280cf39fdb4063a62c8ddef18eb0f48caa5fa29\",\r\n    \"0xc2685cdfb272e9cc40f0e852ec2160a00ccde714\",\r\n    \"0xd9c5c0946045bd097527aecb614ae78fe33fd96a\",\r\n    \"0x16cb2eb61549214ae2da811c0dd3a0660a0a6901\",\r\n    \"0xbb1e3eae91de4353ad165527f18c832b76f6bdc6\",\r\n    \"0x872852ff5c875f58c66470487eb4321aa1eac146\",\r\n    \"0xd7061bcb90709c2285b68aac56a30f93a79540b7\",\r\n    \"0x3acb7faccbb6ba06c51b7b7ba6822281f016b49e\",\r\n    \"0xe317c2a5f4eb3ea6abfe9d0b9924e544178ee6b2\",\r\n    \"0x4fc5325f47f946dc260e8096234ed80603038e19\",\r\n    \"0xc9fd529ba1a5262f94930dc2c0fc9959847ecb37\",\r\n    \"0x1bf4400ac925cdf8761ecf11beee3878d1c8477b\",\r\n    \"0xdd790b297aa10723f9c565f5f10a5499cd471044\",\r\n    \"0x400fd0b9786f1d230749f10719dd8c95aab1d0da\",\r\n    \"0x781de33957de55264792fe2d43d32bffaaa1cfc8\",\r\n    \"0xcf38993d1d6a16957c2e9cb7b4dd4b46aa124357\",\r\n    \"0x14ca20a2d1745c77f488e9dfc0930a035b42db5a\",\r\n    \"0x3f1a3fc52a5c46f8f9bd224f623b3cecd9c76906\",\r\n    \"0x419f6e9acd36b4ae14a269cbd2f46b09bb3d5c16\",\r\n    \"0x9ef44cbba97ed0e8c5372e3f077f153386d17ea0\",\r\n    \"0x7d002504143e3b0f4d9481470fe6840b15ae40e4\",\r\n    \"0x817cbd1806be627c6195c50cd71785c4de7779a7\",\r\n    \"0xe92a2a203a6ea9a8a45c9904545bd5832c592143\",\r\n    \"0xbe9742076caa3a7fc789d04b6bf7e859a2b258ca\",\r\n    \"0x70f989ad176471d9070158de83aa24d866b83330\",\r\n    \"0x315356623ffcf40042cd3cb831671e29f56ccf5d\",\r\n    \"0x4ba08d215c60f712dc9fb75d7c933f753ce62f74\",\r\n    \"0x1c19197da882386f2d4dec081f2cb3f960e6836d\",\r\n    \"0x9819153dbde56ae7e44bd98df747215951bccf14\",\r\n    \"0x6eed50768f1ddeec4732d992658aba8a8e06ac84\",\r\n    \"0xecbd009aa98ea672aba6382027a8695be0f2c3fc\",\r\n    \"0x2690d8c49028be4c86ced13cb95930314fa0174e\",\r\n    \"0xb543b58cde507831f4bbd707c7c3f7e23913dfb4\",\r\n    \"0xf44822b486b67adcdb02c38e4254dfc0e1230861\",\r\n    \"0x7958a45a1915df027c8ea84ee112cf923ee6bc81\",\r\n    \"0x4f78741d77e667829df1f43f76f2a5589e279596\",\r\n    \"0x730948e0b044deecea57d8f418130efaa36945d0\",\r\n    \"0x88f68d861259d243eed40ed9315f3714c581d8bf\",\r\n    \"0x3507f51fee469867c92a83aac1f26f31d1a3beaf\",\r\n    \"0x4874084e903247d655ef910b76a23e3795e8464f\",\r\n    \"0xe5496f399cc592b59b93ab069c3b3c819d4cd3f6\",\r\n    \"0x5cbae987e10e015e80d79f3cf6d255cd20b796d6\",\r\n    \"0x550150b7732dd17fa2382f301bf6cc33c0f8070a\",\r\n    \"0x475a5812b4d720767843119af2847381454eb6a5\",\r\n    \"0x044c929d84cb8d80e997a6e40691722c1f2f1574\",\r\n    \"0x76e5ab37ab56de065c9e4c9f8253844ab8769b55\",\r\n    \"0x0af9c846afcc2391ac52e8a1180d4ff8ce5ba114\",\r\n    \"0x52bc08b85d532bc4d0924ba3ee00f48e61034343\",\r\n    \"0x263e776d687bfa5b64ebd8858b17861481b2bf9d\",\r\n    \"0x67b236970206127830c5f3ef5cba71d9119190f8\",\r\n    \"0x0cd8666838067ba8d3feb80787ee403894cc22f1\",\r\n    \"0x05319c0e7783cd04f4f6ce94723c713ae4ce7222\",\r\n    \"0x9e04e4ff85e086ebf996cdccb5e6033b4b895327\",\r\n    \"0x871c0fc8ed0491569a717a0353fa536118be796d\",\r\n    \"0x1d8380b0bb43d8d0387356b8ab2178ef150be565\",\r\n    \"0x53f0b5556156aa54fd5c5a2fa58c6ea629ff316f\",\r\n    \"0x866c521883bc8cb7c59769e2a06ef38cc685915e\",\r\n    \"0xcd646d46e3fbeb69b93755cf6caf94442c990271\",\r\n    \"0x6267b9518cfd84e2b638513d151a0abe54ec55d5\",\r\n    \"0x4a832f77e9f8ec379d5a093d9efda192cd754655\",\r\n    \"0x752d5a59d9cd3ed8af87e0c8939d5d19db168331\",\r\n    \"0xb019cec7885d83f62d44291a877b4b103f2ffc6b\",\r\n    \"0xbfbcc418bcbda112963e82c090e4334ca7c042d3\",\r\n    \"0x71be896e1ff572461d5280978c9f7c4b1924b60a\",\r\n    \"0x88a53abf3149c6623ac8d7beb42cdb85b8efba83\",\r\n    \"0xe6277f104b07941b2a8803292a745d99405f96b2\",\r\n    \"0x844fd1f69846d890b0174c9724884bc32e8fa73e\",\r\n    \"0x4c168f6425d4c7ad4410363010c2b7b70fe9de40\",\r\n    \"0x64b7ee1a5e1355b9a8b6bd927cee0c6e3b172abc\",\r\n    \"0x6558bcf15646a7f8f12c16770f953b300e2d5ff0\",\r\n    \"0x88bd6104327601294a7888fcf199e1251c8d0442\",\r\n    \"0x06552b1fbb588571ebbfc7c511046cd2d4d35994\",\r\n    \"0x7f2b55ea78deac0427084497820c0e7c49f54b5c\",\r\n    \"0x96a1eb941d0104899816d3750eeff2cdff511dcd\",\r\n    \"0xda134f2e738c6d7705b69af0a457432483d6697d\",\r\n    \"0xb97656e1213417116d4de33d5850dc05f237ce9b\",\r\n    \"0x69fae60b05264d53a9f9fb3e87b4478d21c004d2\",\r\n    \"0x2eb7e43d8558df92a4d7337a2e3c3d4455e031d3\",\r\n    \"0xb091c2937c026f0564afd46e3795695a73792e8d\",\r\n    \"0x05425b19544f326bea7c88bcfd26528aee9648e4\",\r\n    \"0x180a4c92d0a929383e5c06fc12ad2df3da58ad75\",\r\n    \"0x899abfc45a43bff3159ae4bd199881dc78d4808e\",\r\n    \"0xbc58733fd9f8362431d965ee6a126476a83c5d26\",\r\n    \"0xd13aee018063030273c6d7f9bf48766e4e0ddbaf\",\r\n    \"0x7bdaa399cecb32df74e935a044ad0e473b1ede9b\",\r\n    \"0x280c794ff8bfd052311246b465902eaea96bcd21\",\r\n    \"0xe92b8375e1d1850c13ed7250792955dfe47d9aad\",\r\n    \"0x1d60c84412ff5f2952c3fe4e894f0386c34f1a03\",\r\n    \"0xe07b414a694c62a9cbc5bc19cf1e6d8ecbd6e6a5\",\r\n    \"0xbe0f714de26382b342612c208af4c267776c48ce\",\r\n    \"0x5146fb22162d8fede9dad2dbe4e4f5f5f3c235d8\",\r\n    \"0x0f0daf47ae3aaabebd7632e730b4a563ecf88ead\",\r\n    \"0xaf4ce39540b56e338f78969e6385ab9a7bbd0242\",\r\n    \"0xd49214cddbaece8f6e01df58ab4a00c0a851d2cc\",\r\n    \"0x2b5aace1b28fddb9caa6277c4b21df33ae7ebdaf\",\r\n    \"0xf322aa724d7586ced74fe5b39c10165f5bd70d54\",\r\n    \"0xeefb1f84b54d263f1e47e63f14ce5630ae434370\",\r\n    \"0x18df595e27b43ab133db1e2102b2342e4e311782\",\r\n    \"0xede0991f87261cdad5e27bd40d7f017de5d43206\",\r\n    \"0x5877f6c4bf3d6c8651c6b4fbebcf05aa9fb71a0f\",\r\n    \"0xd13ca227144a3979376f3c3c86debc61eff1ee92\",\r\n    \"0x1a3cf82e7f45fe812601c7316686e6b35465a3de\",\r\n    \"0x967541db25a0eab9860cc03ab925b89b1390a5c2\",\r\n    \"0xd1c25ef63d52d1c17350f5d715e763aa5896b51e\",\r\n    \"0xd318c43bd8c44468aa505d08cfe51add338da511\",\r\n    \"0x09d68d28af6f9df8d0121665cc4bf5061b9412d1\",\r\n    \"0xa9a0d720d995e74e24d8cc707d4ef17fb48451d1\",\r\n    \"0xb425fbef7440c8431daa1ecd92939a57c416249c\",\r\n    \"0xbab5027e5027a7712bf321aab4588eb5bed25ce3\",\r\n    \"0xbb46b8f4216d977b3bc679bf3a8c436bd1d375f0\",\r\n    \"0xb01607b4a599a3c489db91bc0cc8f49b6d85d6fb\",\r\n    \"0xd1e19a58d18865a566e5d52d881189e630141edc\",\r\n    \"0x975bb1771c545082650fcafa68a13413c2224bce\",\r\n    \"0x8b27d632f544761c48bb86ecf8606255399a3076\",\r\n    \"0xe14ee75f5980addcc7dd76c90505c0dcf625962f\",\r\n    \"0x5efbdfd516be2a628f1e126a7a12c5be549331f7\",\r\n    \"0x99c074467159010fa47cf4f37561859954a34e63\",\r\n    \"0xc43416167d57a78fb0b60c712c77d90bb37d7a59\",\r\n    \"0xa0ccabb58ada0932d17875b6ae7afa93c3dca9a8\",\r\n    \"0xc7624de41815015dea99b7d93fbcca776ee9f008\",\r\n    \"0xfd92c2e52d355c2b1aa5356d1b061e5161253288\",\r\n    \"0x542a3698a05742b1915355073efb97b0768c62db\",\r\n    \"0x6c381b68b131ce4c58ce324df179f9ad10fd41ff\",\r\n    \"0x6c0f537448dd08ae806eed9d70332018ebda684f\",\r\n    \"0x5ff594a072dced6c80b5c400dd914a5932c2a533\",\r\n    \"0x6947eeb9b0657836e027268f9181d55db0f42a7d\",\r\n    \"0x8938ab73f264c76cf3695b57790cf3f4376cc0b0\",\r\n    \"0xb05c5289ff57493e6d7ceb015ab44abac1696a34\",\r\n    \"0x12994a32e5acb7f23dc0d997a1b7cb3e338ac810\",\r\n    \"0x4dca140ad8ac838c8bd305f9ca59d3b71567360e\",\r\n    \"0xbcb340a4feb1fae8c4823a35412f0f8d0b5fdc8d\",\r\n    \"0x49d6bdcede46dc8518828d043489cdb1dc95e4a3\",\r\n    \"0x00762a20e5d52473096d275b8d12cf676a435eb3\",\r\n    \"0x839c7a6f49e2d03d741571cbf2dacfee208b2f5c\",\r\n    \"0x63849d553fc1c9d3b22ff218e8ae3a1d1b716772\",\r\n    \"0x3f4b9ca3d994161fadf5dbfc0f5a5e6ceccfa52a\",\r\n    \"0x47240c2ba6c39de527f6057bce1b55a4e5e49c41\",\r\n    \"0xfbe05ac8770b474ea8dbd7626e63f243ac532dce\",\r\n    \"0x75740e5b73b3404420fcd53caa5d63b8b50411d3\",\r\n    \"0x87bb475b116053fb9ecde64e9a812299fa1b52e6\",\r\n    \"0x983da659ae1f0beb53357d2140b701e9b0e56d8b\",\r\n    \"0xb2e2947b8f52e4a8783340d43f8c09c1485bc102\",\r\n    \"0x79b143b2d37a4d3abe7da6d4787ad8209afd0761\",\r\n    \"0xaf87d3cf1c36baeac320e177aa25a98165137a93\",\r\n    \"0xd32cd2eae9ccfe1577f528fa15539e0b6dd7584f\",\r\n    \"0xbbeebf206330f6bc2b8bb42d81d4793f80186df2\",\r\n    \"0xe9194a2d0a3cdca49a1137259a2174dac68fc19e\",\r\n    \"0x7c4d4740a9e1c8650e6b312270838997000cea61\",\r\n    \"0x2b072ade115556fc2eb2d4f49dae6d99e8b8ee9a\",\r\n    \"0xedada814f17d60e9a3997945bce2c4dd0d28c49c\",\r\n    \"0x6d9b7f8d3a15f15846d8497d681ca0250addd8da\",\r\n    \"0x0900c77eba55a84773ca2dda189e4bc6eb9f6daf\",\r\n    \"0x024ab6a32f673c55afee060db7b6e062d8d4d388\",\r\n    \"0x5daca62cd926a6bf54b288bf1a2f40e3d6d69694\",\r\n    \"0x9a411eaedaa9ca12a54138ad513d9c0fffaaf93c\",\r\n    \"0x8749a5c896cc2e290b404b1f6916cc2dc61ad590\",\r\n    \"0x371ca8fbf7d1b336829831a1bfca00df0349eafd\",\r\n    \"0xed655cfce2ca811f0b3cd9dafd956c043b6d676d\",\r\n    \"0x94684eda63d124d242842a2c35d73d37e60aa875\",\r\n    \"0x83dcdcb82dae51deab60312528e93721f4ed2ee0\",\r\n    \"0xf9c5d251ad9d877e627cd659dc678a59e2447870\",\r\n    \"0x12a5a5324dcbd3ce343cc3eeb086178d09953f00\",\r\n    \"0xfb139538483bd2d4496f4bb01e5fb6a7bd3023ee\",\r\n    \"0x1fca7d32a4a923627a160047d513fe1ac12277e9\",\r\n    \"0x8c49ca926929dc2878333a3c58a4e8180a792596\",\r\n    \"0xc8f331f305c5829585a4e4083367a7a38cef3485\",\r\n    \"0xa24ba636d265622e6cbe860f8400e546d3c3077f\",\r\n    \"0x9adc5cb534b807133bd1d08a6243f2216e848a12\",\r\n    \"0x3f2e122b41ba8b95635f0a6e36b87f0904112c8f\",\r\n    \"0xa5543369a2480642c593661a51bc34541bc17f41\",\r\n    \"0x553d6d735a0dd7c596dd05a5e44979ed9bc246e6\",\r\n    \"0x590636584ed443c6a0685894c632b81e2cd55f2f\",\r\n    \"0x97db0e57b1c315a08cc889ed405adb100d7f137d\",\r\n    \"0x9f5775ee0fbf0d84f15979586e02a480bce2132a\",\r\n    \"0xbc165c2e057c09e9697cdf9769fb838c7aae17ec\",\r\n    \"0x5ab90e089bb3f3b53c7371f4b8f55f27c46aff2c\",\r\n    \"0x6dd49757811e363b92fda0b29a8740407c50b83d\",\r\n    \"0x2ba99102516fdd5e2fe374d038d8a8f318787f7a\",\r\n    \"0xd13ba549462cd8c3f47a9468c99ac50350edbee4\",\r\n    \"0x6081d70d02f8e43fadf5fd61762bba899084d27c\",\r\n    \"0xb8c8e839a72d27c42fbc87b6001880282267788d\",\r\n    \"0xe64f23aa2701dcf772e1535ec313643f13ae761d\",\r\n    \"0x88cff2d118231b8865a33964cba28dd68430a202\",\r\n    \"0x7403aadac5562692469a02c797897c82ed11719e\",\r\n    \"0x73fb8174c038f242eaeaf3ceacc91ea4526dd732\",\r\n    \"0x42156de6d16905918edad48fb38fb58e0daa159a\",\r\n    \"0xdeddcaed4a303616f99ffdca3e78eb421a6a247a\",\r\n    \"0x0853bd256beddfc7eb741f43b165d98ee1726128\",\r\n    \"0xa5864d02057e64c6e5d15056884a97c7347d9021\",\r\n    \"0x4e936c04464ad31f34a1188bb43f3da0230e7dfe\",\r\n    \"0xa1824a381d86a8cb8b077104a53fce9b8882bb28\",\r\n    \"0x78220b20793fa08eea27e7d05b413571cf6577e0\",\r\n    \"0x90fa7e757adc2715a2571fd90c0f58bdf1f38dff\",\r\n    \"0xe0b8393f8291267bdb25073451e370355be59098\",\r\n    \"0x1f2a7b0d8551039adbeb926db2b96670f6270d23\",\r\n    \"0x799c0ef7548cb0115ac75d2e10a23a110bed7d57\",\r\n    \"0xd2ec35a334903d1554b528e04467313a7b6cfd46\",\r\n    \"0x2a3b2ed03374a60d40a91ae0f83f31ab3fea014d\",\r\n    \"0xed782353d59ccebb516444d0ae0596d149f5e525\",\r\n    \"0xe93e76578f1ee7cc998368c50875fa00c775faa9\",\r\n    \"0x6e5e6b85dc4c67d1a895d72d6f88e42f3d249e01\",\r\n    \"0xe4d86cde9e5884a6b785e541061b76fa6fb51a1a\",\r\n    \"0xa0ae6c7bfd2ddd4be1fa0d57da642076933b3b6d\",\r\n    \"0xcce56f9d3820a920cc4f6ca1be0de9adbdaee917\",\r\n    \"0xdddebf0ef0e9c2405f05886487c2bb5481127aa8\",\r\n    \"0xb612374f51f8cb519a9ad5a2d251ff7e331df26b\",\r\n    \"0x68bc6864c06b64f7671f813942ff4227b51838e0\",\r\n    \"0x29f687c8056db10456d713e928bae994a06a4d7e\",\r\n    \"0x9b4d2efb54c0e2a5ab299a174506832c7c164d62\",\r\n    \"0xb138b117d91c20a5e6f4a9558e5384cd02424155\",\r\n    \"0x64fa0e46d3f361e56124bf8a5cbfd3c3eecfa635\",\r\n    \"0x94327eafa222f9eec76f3815081d56a29a4dc304\",\r\n    \"0x74f18a0189efbde399885b654a87fdb8c2183eda\",\r\n    \"0xfb486467a825b1d06d7f445d785322935f3373c0\",\r\n    \"0x15af672557a36bcde8750667167b0c48324267be\",\r\n    \"0xbd36c1a1a679b3c957a217870cc88bec14634dca\",\r\n    \"0xad9a6f331aad8e1d1d5522d2254622471467bbd8\",\r\n    \"0x618e00dc29b9afe119405a6f47d8c43c9b1f968b\",\r\n    \"0xb3f017104591080edb2b8d5ef433daf17e6c53c9\",\r\n    \"0x9c8b867d091a8bf872dfb803ab31bca084d8b42c\",\r\n    \"0x2675f65547760f6ec17c32d75dde293d0cde9a96\",\r\n    \"0x8c0ca86c006867277a316fb7d4b1af5945735ae1\",\r\n    \"0xd5e5bb1d62e33e1f356c31e2c4e9a68bc1b4470c\",\r\n    \"0xac5efb1fa5bc0229b5e8650aca22f45246d04b66\",\r\n    \"0x89e09861a2ba7883a26c5e26ce9af926126b8b0d\",\r\n    \"0x26e4555a719aa5b6e9f4f354b68cf5497f9323f0\",\r\n    \"0x9bd35897af2f128bc91309e4f41149df272ed517\",\r\n    \"0x98448eb610b88efde4850644feec2c85c0e43938\",\r\n    \"0x2df2d421daf5e5bd7a5658d54eb16b10f42eb128\",\r\n    \"0x560241a406363f76c49b13b57f971164c26fd06d\",\r\n    \"0xb486efb8d185bac641440e61317574b17b29c5bd\",\r\n    \"0x0981cf18758b5f2c251804eba9363580cbee779b\",\r\n    \"0x705ba3fc4dc62af3a5de6ff7a9bc52a15dfc81c6\",\r\n    \"0xa535eb235605f9191b49949b8b79ddc92f2cfe04\",\r\n    \"0x1b498e7bbd4c8a0fd84be6e773c44c76b455513c\",\r\n    \"0x3cb1010156174b71dd6f8402c56ba8945f37bb2c\",\r\n    \"0xb2851823cf16f64c2318564a63eda47df5bb130d\",\r\n    \"0xe550f9ac74bace5cc7f98e4a8bc449b7d9a3dec7\",\r\n    \"0x19672fa881e60ba0f8cd3dbc0d1356aa2515fb52\",\r\n    \"0x5d9c50c60e8a39ef2bd27a66c5c616b8049a1e67\",\r\n    \"0xb3e2298b157a5aff17403d76b0d80a6da9487528\",\r\n    \"0x0fc2be1f859223fb7925fb549d24a916b5fc31b9\",\r\n    \"0x7c2b502ef2583d673297cc660be53778ada91f30\",\r\n    \"0x8d0463e402c7178be2dd8a4377461bbfe8a495ee\",\r\n    \"0x746ff612f8e9ba4b0b1716e8c8d0876e3b0ee247\",\r\n    \"0x1a917de53b4b0fff2b7bef144205c04cd68d0de6\",\r\n    \"0x6689badb1172208f4114d645817e6dff1dd92bb9\",\r\n    \"0x4604abf4abd8d68261a6e3c0f99432ff44bc3e3b\",\r\n    \"0xeda07b60647ddaafd27498614811041aba562faa\",\r\n    \"0x7d6b90c74860036fbee730bf7ead1e847074cb43\",\r\n    \"0x16aa82c7f449ae26c39726ec6e5289c72219205b\",\r\n    \"0x4438f634389975a429c702ad72fa14eb66739b74\",\r\n    \"0x856f56ad19df70f345cda260e9ad4b4e5834fd66\",\r\n    \"0x8276f25b30426bd78eb7b65fbea3282201969908\",\r\n    \"0xa3de788c3124f56edda40889ca8d44d28935ba11\",\r\n    \"0x30731fb7dbc03718cbc00501f02ac42951e5c2a8\",\r\n    \"0x58f6e124f00ead46892ccca7dc61fa7331ec7348\",\r\n    \"0xb420ecee2ef6679397a76e080aee5ac46d137c64\",\r\n    \"0x1054cb9bd3c872d47760bd8405570ec1919632c5\",\r\n    \"0x83a0f0a0b533cfd8360ea6475d737af702a17b1d\",\r\n    \"0xc70486d98b2fc5128e53e36730d4938a0f095041\",\r\n    \"0xf2d86cea4f40078be0d86c2d9e3f36fd5f0cbaf0\",\r\n    \"0xcfc7e031ff99bc480676e70fd047cb28ae72c6f9\",\r\n    \"0x62572cddd4c79a93a1e7799186f8ea9ccf176807\",\r\n    \"0xb1afe7ba9a59b9ee0e6250a1ff2db6fb6137a50e\",\r\n    \"0x8e8a6aa5f0f09825d5a91a95adfe1d1e5f3689b7\",\r\n    \"0xbe2bdb52d96ea86700c335b00caa31bbdc67d938\",\r\n    \"0x61b4823b0f495f0ca642c2c19819180be7dd9c47\",\r\n    \"0x9370d92fa20b7a59d565b0a49804609eba587e00\",\r\n    \"0xf7465285f47ea437e2d6322e6931fcd510f59613\",\r\n    \"0xa9b5c6b8816f88483dd1d639daec6e8e2c10fbf2\",\r\n    \"0x476ead5042035ca3c7b650f4c231c8b6aa1de6ac\",\r\n    \"0xe39e6ee2de98896c36e13e34f531908d930aacf8\",\r\n    \"0x8595c94e484202d7c5903ae3d64fd8e6b6e21fc7\",\r\n    \"0x7339cca525e485eb4e2491e8c62203a05808ccdb\",\r\n    \"0xd76b025f9b36194be6b5b98326efbd6bfd1e1165\",\r\n    \"0xb9c582dc431a2bf9363cb3a20e2d2d329c826b7e\",\r\n    \"0x03103b9d2e4ef241291e6cf779f295ba043362f3\",\r\n    \"0xce43bd8becdd910d67bc0d2024bf6a505cd1984b\",\r\n    \"0xc8d9607da8fe93946cbed026589fb28b6b71fbf5\",\r\n    \"0xb6fe70fd39a407226c960a56a49c3351ebf01692\",\r\n    \"0x21d7dee977e172687e1256ae8479e183669b4780\",\r\n    \"0x0985f558f6da93e2cde3a86920121d0bb5e52a6c\",\r\n    \"0xf1e06d2455001a26cc8df2563d8766714fc81f59\",\r\n    \"0x30670399d04af0aaceb618d0feae6f7e0973e9d6\",\r\n    \"0xba6ddd40ee871d9ffe9aa380259fb9553472d410\",\r\n    \"0xef3a9a0985b28b1e4e84c63b4ac84f8830cb775a\",\r\n    \"0x4473e161289a0ed52e88a3c02fc1aa5e64c83b8b\",\r\n    \"0x576fef6f05f2c7d3030a4d677132b2c89e353db3\",\r\n    \"0xd75975710da9e235cf4a91ecf21dd1f423b13071\",\r\n    \"0x678f22794a005fc595e44ba0213fd1cbb341c564\",\r\n    \"0xf51bc98798e760ec3906f8e84221ad7dd5d3b6ec\",\r\n    \"0x0426e0dc38ea9fcb5eaf8141794f37fdfd9b2b44\",\r\n    \"0xf4d77b32598be0b4f4ab09d486c594d0560ce900\",\r\n    \"0x7e5c8bfe040fbe868f59bd0a70bb8b25459f9b09\",\r\n    \"0x1810f5032acad8b168ea3327b409c24386e4a37e\",\r\n    \"0xff1c68d3cb4d4db8b1cb9ab10d8022f8bee2a195\",\r\n    \"0x5965ea4014c38406d9861b674d84feb07f0eb674\",\r\n    \"0x7161b7379e6bd59a40c6cff2595417f8c2c73ee6\",\r\n    \"0x049ae1c5b8d6d2139c8693f879e609d46ec1d459\",\r\n    \"0xa32b732faf095ef2b8dffcbe98d347d505969305\",\r\n    \"0xe02f8f0fc2b82f4bbe59c76b994162b3fe3c2e78\",\r\n    \"0x6c5ab08153d4f7a2e8f037438b05569be7846fac\",\r\n    \"0x46ad95a2c68afc7118a5129cb2ad9413c3dfc7d9\",\r\n    \"0x8be123e08395babb0a4f440d4d3f6ef25b6791cc\",\r\n    \"0x58d0dea3586acf66947d5f69952cd5222f03fa9b\",\r\n    \"0x5a3b403616ce63b1ef619393847dd71adc56c6f6\",\r\n    \"0x79df11561a14a5901bbbb7cd4a455f6dec280c0d\",\r\n    \"0xc17ceb7a07a888e8d2b945e625566b72c60e83f6\",\r\n    \"0x9a6d9f326fa2b432f909b01477b7540786ab09dd\",\r\n    \"0x40a20eb67c303e547764e7074026de8d835b2758\",\r\n    \"0x2591275269861509e1c95847358999c374a34934\",\r\n    \"0xcd1c7b3ddd331b4d9ad108e22478f16fbc1b1be2\",\r\n    \"0xeb6599746b27f84c6ec5dda66714ecb5b4e1c2c3\",\r\n    \"0xf8d51af9cbb5d75226d817b726b0b7ba8f8695d4\",\r\n    \"0x2e4ccabb566c27623a9f8b8efd8f21d00baab2ac\",\r\n    \"0x21976da0b981372a7d432fed9c1da70df753d4f4\",\r\n    \"0x04cd89f3e9747fb117c15e08e4abc37af4e3d678\",\r\n    \"0x5db0d909851877bdec4dd118c89e08b7427f234a\",\r\n    \"0x82a5876ac6db7cba522a9b3978f66add86f1be2c\",\r\n    \"0x81330bb4f2b692621a36813bbabeeecfdf515877\",\r\n    \"0x90f39f498787590b98fc242b0dfbdb2fe7f6a55a\",\r\n    \"0x7f9cbf503d124c5bd394e766135055a749b361be\",\r\n    \"0x442b44ce672d94dac9fd3d4944bc78a2da3eadae\",\r\n    \"0x2e21cc4c00e478c10fa83009e9f379a71152597b\",\r\n    \"0x53d3c701fe244a9d224a069ddc54643fe18c6d3c\",\r\n    \"0xef2a9d39f085bb25ea1244a3d45e29de0a003cc1\",\r\n    \"0xb33ddf7541c90ff76887ec81d76e9f6b244cf5f5\",\r\n    \"0x0cdf723ba8073e3c7faf4731e20ce40862654f48\",\r\n    \"0x5dc6f6929aff6bbf586c444f4986e2534dc79ccd\",\r\n    \"0x53c0501b7f6eec68b05bc478ca0e660874dabf5a\",\r\n    \"0x18f2fc1943e4747e4f3238e9930db1a3493f0c84\",\r\n    \"0x128caecad9928a55b0e19aa20946fc7f351dfce4\",\r\n    \"0x9b6e0bd7b7b64beee82503374400abf5b0ec5412\",\r\n    \"0x9d6d151409861e7b0dfe8a9a619eb4c290d7790d\",\r\n    \"0xc22b52dc585fbea61ff2ee1b821b4570b298cf7b\",\r\n    \"0x82bda40e0c520eab6a52e9dfd5ab57b5c746698f\",\r\n    \"0x1d8dfb7f232487151518cdad268a1ca95c8d8340\",\r\n    \"0x031f826a4f6fcfa59e4a62cb2523fc53fd532438\",\r\n    \"0x4ffd789c93927165dec50b8fe204254840474f3b\",\r\n    \"0x44530b657d86eabeee387177c48a8bd4ad14841d\",\r\n    \"0x8e003ec13b475487deedcca058e0a49445184c13\",\r\n    \"0xa271ff841f9031d09c861c2c6fe0f2e0a29bc177\",\r\n    \"0xd8a363979d83d9e175a6d5e0da15eff358d0c7c7\",\r\n    \"0x81aa2c74e44bf6e92fae351b0af722597d58c3b6\",\r\n    \"0x1883a7d2fda6354b9cdfd7e1dff8fb959e1f66b7\",\r\n    \"0xc31f1e40b7c8ba39dfc6c4cdfde2dbf1c1f70663\",\r\n    \"0x3e8cf3185dd9b4316222645d64b825a9a699e8b8\",\r\n    \"0xdb4028a84e14cb0c47a952de187f0fd503bf3a74\",\r\n    \"0xb41bd214f4e2eefaf7b68b1647a68492befb66f7\",\r\n    \"0xe15a2e7a5800fb6be00af452fbbaeb2303a87c49\",\r\n    \"0x95b73d7480a04a255ec3a5ac21ccab4a38d2033d\",\r\n    \"0x48e48356d734203c5ba8cad0f798051b97af6018\",\r\n    \"0xd33cbaf677f20f42a2034e2475111e79c6cede67\",\r\n    \"0x458547c614e4bf399666d4b72b5c2ae3d795065d\",\r\n    \"0xbffade145d1238a3ada4b06936c07b01c0931ca9\",\r\n    \"0xd44b245f316f9aaae031555032e8ab6cf3fadef6\",\r\n    \"0xd29a1b53a488346b439757641723d8d68330db10\",\r\n    \"0x77d0e608e3666f5be345c6277a848aad6fb940f2\",\r\n    \"0x1aecc894926bd14805bba94f90cbf0f185d45ad5\",\r\n    \"0x72fb7a5c73f5b8a9c9d0d479e6be2cd5bacdd818\",\r\n    \"0x145a02d30cfa53b46711dda8153c453c734d2366\",\r\n    \"0x65092840c624b46623f337a33048e86eda2fd77e\",\r\n    \"0xd3bf71c865ad8d6ae04283ac144909ecb1147445\",\r\n    \"0x9ac31425d0ce2b1dc211512d0ddf1f76da0d45a7\",\r\n    \"0x9b1c6c58f5c426e22db4cf5920efdf02851b7ea4\",\r\n    \"0xc410d3162aaad3c9784b46ed3d9ec68ffe632f2d\",\r\n    \"0xd5b472b67159c136d4ee0c0bef04e54dc2878530\",\r\n    \"0xf4e80ab58eed59248e7c92e98e480f72da70501f\",\r\n    \"0x76dac792555c8b96ce0bba52e2a8fe98d34b36e9\",\r\n    \"0xf07f8df72fa19dfcbbef5ec16e11f6aa963961ac\",\r\n    \"0x829cd7ac68f62812aa222d26e1fd4671407f36a4\",\r\n    \"0x51e8c24a163a391a334e6850e49ad9c22281bf87\",\r\n    \"0xe52c17deb6c37be530c8b06db4108358980a0094\",\r\n    \"0xc216696a51d99addd84c91075f24210bd3c26b07\",\r\n    \"0x94bf5e6863ff93c082ebffd5998c07ff7e776ecf\",\r\n    \"0xcea12bdbee4f9b415b9bc3c19bc29c32c1c840b4\",\r\n    \"0x02d82e618840536037b9a6fcd692c45336b730ab\",\r\n    \"0x31818b6325dc0b7441c9c7186c83dc8a347023a8\",\r\n    \"0xb486900aee8554833d75f8ac67817bb22f4aa4bf\",\r\n    \"0x4a560f860b6489967366302f40084b0c33e70be7\",\r\n    \"0x7b6c5b07d74b4b7d0954faa89da67a443496d9d8\",\r\n    \"0x11f1f06d2cdb1e289fc3d2a4a81d94c3aa9da538\",\r\n    \"0x3d34752fdfaf540076d07d2edaeffcc2a4cd179b\",\r\n    \"0x6c63698c418dcf745f22bff572e53cfce09b7561\",\r\n    \"0x6feabdfc7a670a1e652e7c632c5f424e697e1f97\",\r\n    \"0x45a43802f4a2907575fdeaa889bce1f5110f08d8\",\r\n    \"0x0210c37adc98a21441190ef717a46daa0f903a67\",\r\n    \"0xb5f4358efa150319922aa96b03bf95fe148cad7b\",\r\n    \"0xa51c75b983dec609f8066adf6f60f1942124a8e5\",\r\n    \"0x2e4dd1f98d8e477afdc56fef889a7e692f5b094b\",\r\n    \"0xab134a010e5b395e2c9e927b583f2e8804116b9c\",\r\n    \"0xae13c83c2d069f3cde56149f75a198b1f8cec147\",\r\n    \"0xf79377ace45faa733c09c4933eb0b0c8dff6a9c1\",\r\n    \"0x6a75cfab44eef49c1a1cc37490286b1bff072fae\",\r\n    \"0x224baf2825713bac8b0763fd8aedf64d62483ab4\",\r\n    \"0x36305b0c27ce6f831eac422aff382dbc0081df2e\",\r\n    \"0xea14e28f9de5adb88b7ee077083ce260084f12ad\",\r\n    \"0xf6005f442f1ca0c44b1feca0a67dc983d24242e4\",\r\n    \"0xe6b4162d7140fa654d86d0bdbc79805ab2a54378\",\r\n    \"0xd45529f2be74ae376def460706a536d502b52816\",\r\n    \"0xe0c38393babeb142be131b08947aa0c93af9d3c0\",\r\n    \"0x301ce622964acf52850726789dd4b1133c37d8d5\",\r\n    \"0x18cc1e55d6ed2742537c64f42b28b7aba4089edf\",\r\n    \"0xca144bc972e07ac38c6d68542c291cfdcef2b31e\",\r\n    \"0x8431d385e16924f4a897bfabe5550f9510ad2604\",\r\n    \"0xcfd50010e0f80a3bb951671f84ae883eac6dc831\",\r\n    \"0x058fd36a48e1c9980b34b41eac8a46c3eaf19a41\",\r\n    \"0xac0537fdb3591444094004791182a0e5fa3669f0\",\r\n    \"0xbabb54fff661c494ba4b758ffe2c87f14439e715\",\r\n    \"0x29fcecce51a2cfaee83bf3c71fc808c9d8c32413\",\r\n    \"0x71067616582c9e91e85d1d74c723902c001c2f74\",\r\n    \"0xe5d8a1994f9575063e7aa54c902ca3590742171c\",\r\n    \"0xc9b0413d1d3db389760fcd0aea818ab7e628bfc2\",\r\n    \"0x1f365bb47a6edcd75cafa6fe4bcfb7892c2e7b08\",\r\n    \"0x21420b9781072a133ca94822281d38e4efa7133e\",\r\n    \"0x3ea12edd9c95690bdc12d157837cf6bed6aed175\",\r\n    \"0xbf8dd6cd1c42dae004975f64aaad289c5c1c909f\",\r\n    \"0xa0fed9069c5056a8324bd6592fc26e3696dc97aa\",\r\n    \"0x422f944dcf5655c1e18aafb9a397ceab09218786\",\r\n    \"0xa6e29d12e609095289e4e61898f966b2a7ab22cb\",\r\n    \"0x7a381b0568a660e990e7a5e049a9d30f0206c15b\",\r\n    \"0x980717eb6fe897114057bfebbac95ff059e0eeae\",\r\n    \"0xcc5edaa87a1ee0db3337051fe7d0124a3b4436ae\",\r\n    \"0xae04274ea15a6d8da2473a0e35505ebf2feeaad4\",\r\n    \"0xa4c616b1c6cf6333ef032c2fd0b728dab0e639cb\",\r\n    \"0xa533ac7aab92d5194a4802cd0ef84c6db79e2c60\",\r\n    \"0xb8b93a022d5a50550f6c7b6a3516185a7519f076\",\r\n    \"0xb7d3b48e2b6491ae07eed3b8e0a2ab52d09a86e4\",\r\n    \"0xc8d03ca71847c2750d011f9829e26f9a92f083f8\",\r\n    \"0xa16a593876d8a348f28a709317387492a7d28c60\",\r\n    \"0x61524f737b0e9c035af4e56f4639a5083f91f011\",\r\n    \"0x801730d73c234ea2c5f1d3ce50c6ce3fb28f5d28\",\r\n    \"0x9bfc54bc4ee5aadabad6655f88494216eea73c18\",\r\n    \"0xb0915396389c9db20266c2d1dad8eac86dbd71d5\",\r\n    \"0x88538a82143065664232422e2dec4309038fcf9a\",\r\n    \"0x72f075bc0ae6da97a51f2b0610627820dcc7da84\",\r\n    \"0x8b49d9523a14375a1539fa72f1fb5346aa0024b1\",\r\n    \"0x1c5e185df4d22b96fa653b9b850260e5db068f17\",\r\n    \"0x85ef2c4da0cc943158d8bbc5c1bd8708d2b0a04a\",\r\n    \"0x76e2130259edbb05120ff590ba1d297834b61203\",\r\n    \"0x75cb1fcfa275ffeb6868003697906da4b96afa0d\",\r\n    \"0x8c3e99a93212a981276a6bbe42af06cd26943caf\",\r\n    \"0xc63719d856bce5657ba2e111fc04af65e8469696\",\r\n    \"0x03f85c2e7d79fd45bbac2c1397f1214c255106f3\",\r\n    \"0x1b37dcfa1e65ed6760971e88a120159cee6f22b5\",\r\n    \"0xa6a62eb8277b74c03dbab150f7ef4101df5c4d39\",\r\n    \"0x06579c5d513ecfcfdcc4b2a601e247edbb2b144e\",\r\n    \"0xa4371ee9e707f6b889595be1b1bffac15c002021\",\r\n    \"0x71ce65a6ff50f8f8bfb6984c3bc246d3a1df846b\",\r\n    \"0x4b3e25ffc10ee08adfd39cd92a420e6b3d612514\",\r\n    \"0xe550aeb600ec69ee0ad4a4b1448a763498bdc6a4\",\r\n    \"0x57ad88dccbf1b643715a25e32320be63eca82a06\",\r\n    \"0xf48d658965a71fa56d237902ac18dabcdf9ab5db\",\r\n    \"0x56839d8d418dcc1e3526470ac57a035cc4f8376c\",\r\n    \"0x3282b0cde64178bcbfbbbcace905782dcac910a7\",\r\n    \"0x50c5e5d09d49397d741911422cb960c10655dbc9\",\r\n    \"0x40d98dabbe8a6db23e0c14bec3e0d7e4fe86fe66\",\r\n    \"0xb9b4110c56f58cbdd0fb66c1dfacea27039b6aa8\",\r\n    \"0x8e1457ea04bda26108849a66a415ad09f3f9b60e\",\r\n    \"0x6e3118d825ff3bbc7979598236f09ede2e71578c\",\r\n    \"0x604c9700b46230da331c69be92c71755eb5ea4ee\",\r\n    \"0xcf97627a8487c0e2e47638008a317bc01bd31ec2\",\r\n    \"0x5a2dff6164da956c3ce4422bc98cee354b7cd1e3\",\r\n    \"0xca09365324bfd58bad060d8f653ea92df11bc4b2\",\r\n    \"0x996ff3615cc314c166f08799a6808246c8556d56\",\r\n    \"0xce92f9807222f68286c201fa849a8146ed167b3e\",\r\n    \"0x658fb964d7d478dcf63f7d48f008523b7fb11521\",\r\n    \"0x93eb37414e758d57ad6a08f9cd62f11935737769\",\r\n    \"0xc13ff9983bbd9825a779a4bca16d2f570472ed6e\",\r\n    \"0x33ec31925b3c5d8592d9b667633f46995dcf8982\",\r\n    \"0x3916cdc77378a2683e4215c9227e5d82d69a1908\",\r\n    \"0x378bb3c0295c1e0a65711bf8b1e70fd3103b711c\",\r\n    \"0xbd1be5f9fb7afe246ef7f8af3c5f6c55e69b86d5\",\r\n    \"0x5f9fa04995419aea0fe6bd6d3f5f6e3477180a70\",\r\n    \"0xb1fda3fbe67854237682bf49075303e8d1ec2899\",\r\n    \"0x41f23204fe3a52494d9223662431ca375ebc3e17\",\r\n    \"0x1336782a672c31065846da14746bc6131d7644fd\",\r\n    \"0x8524cec12f84f66fcd6c7e26eba5b598cf190f4b\",\r\n    \"0x792aee80e7ab74264ac03eeee7b076e71e93fa25\",\r\n    \"0x48131409ae648f838ed80b4b5f037f6d3f33c085\",\r\n    \"0x44c4e466f01dde08b7850bc7ac1958a1ddb9bbb5\",\r\n    \"0x46e6f9c8fea5cc5720ba6bb6116846a7528d7030\",\r\n    \"0xae6a03558b3feb1bb3177d16a406e27eec5a8cb6\",\r\n    \"0xf65f32aa5f08d62d4e7a444e81b80d323d82fe38\",\r\n    \"0xd36a3d9b2a027cbbd6e926a6c1f3af6cdb1599ef\",\r\n    \"0x46cb8d9101bbd5ba0d448820c950410f6335b908\",\r\n    \"0xc065d4a5567f266df0bc22544b7384228d13a098\",\r\n    \"0xa5da76ed5253fbaecd77a11337cc3650b8891888\",\r\n    \"0x795cac5323ffdfda25f314bda70ac5b7ef9e638d\",\r\n    \"0x1d5f9c07a4e232d60ae33ce2001e84f85bbb6923\",\r\n    \"0xae0b9382f2539ab86c28c612ce7ad1a14a441194\",\r\n    \"0x6a86f97aa593b0c1b460fc2bf93790fd18374e21\",\r\n    \"0xede0883f5752931040e44bcd1b0a9ddda407b60b\",\r\n    \"0x5d96048fdcb71c7565bae2c3ec2b4094c728dfe2\",\r\n    \"0x480dc4b1011eeeb8a2fd97134ce7118b7d22358b\",\r\n    \"0x271224b6b91cf777d8f77b92264ae3544703a209\",\r\n    \"0x6827e5b7904a7a0b6e3f97ac463a3d3b0bd0ab08\",\r\n    \"0x77a1cbcc950e27105d8d30898786af92e763c7a4\",\r\n    \"0x6fa36827825d635987caab2995ff4129f7998c55\",\r\n    \"0x55bee2a47d33dfb2fdf80ac101da6b8e50ebfbd8\",\r\n    \"0x4533f8eb0fecdd9bf47032cc29e8441ddc1362b3\",\r\n    \"0x7e01b4b68e2d021f65741e994769cf729b5c5669\",\r\n    \"0xd910c3e2ef888ca436055748cdb339b54840a0a7\",\r\n    \"0x145fa1a215804f1b345f5c44750628a8987822e0\",\r\n    \"0xdfd6952e1c9311d8b77cfcc8616f2bf9ed5b53c9\",\r\n    \"0x6ba743c03d48d6c645ca9ffa9c7727d037c1ced3\",\r\n    \"0x74148cb96e0f85c9b3eada9b4b4deeebf040dc77\",\r\n    \"0x55affb1e28c1c0341cf130c0b4440089956c2baf\",\r\n    \"0x787ff6d99a50fa2cef5b01014e3071e0e53e8107\",\r\n    \"0x3247241455728310fcceb494899971181337dc65\",\r\n    \"0xd855193cdb29b7bc3041cb8cd29dc8a337e83dfe\",\r\n    \"0x251c821110268d9d6d89a2ce00f0dccc95e65c4e\",\r\n    \"0x45c98dc85a85ede0035dd01d7635124b0ed83081\",\r\n    \"0x5845231f30a96f5073626f3b8b759fbe5729ac94\",\r\n    \"0xa15b42355a5b27b7334a8f2683705d1168a19e41\",\r\n    \"0x86f8c2f593acfcb78e25221221db6f5ecb404bf4\",\r\n    \"0x3fadec680bac0b4b53764cb3673f19993284c246\",\r\n    \"0x4a12696122203f1cb54ff12c7b3d0d32a9184e7c\",\r\n    \"0xabcc197846238edaa868a439fd30051039e9fafe\",\r\n    \"0x3e68bd027e8080e65c9c42821420cd655cc8b3a6\",\r\n    \"0x5f2e73b53abf01b668cec9312d2334594f79d092\",\r\n    \"0x4191d46d4418615eeca3e02c70f4e1038b17fb32\",\r\n    \"0x69ae11242ee0affb5000532a9548808fcc1d17ab\",\r\n    \"0xb582257829f4bff353c6aed7369c09780b63e223\",\r\n    \"0xf40465cc5d8b5e66471a2913378b0a568377c0eb\",\r\n    \"0x41c820c626483a89147d9b45063d3d6db9b27643\",\r\n    \"0xc8cdbd834ac559fc5023fb2ed24bc4736d381762\",\r\n    \"0xde74760bab7e758c724ee58802275d21dfb4ae60\",\r\n    \"0x802dbb890663ee4f152a83abc2e0aa55cf10271e\",\r\n    \"0xe9e03fde298077b96dd8b0f9850db86007711313\",\r\n    \"0x693b7223b9aa3a1b3c49f6da76ec6b49b839069e\",\r\n    \"0xd01efe25151cde4b184e32abdeadebccd6042095\",\r\n    \"0x9ec24fd24b3f26edd142036a7f06cdfcd0e3776c\",\r\n    \"0x832ed9a180fa2b500b4a88983284281bbd5b4068\",\r\n    \"0x38c85904550bcecf145a39854226d31dc79aec2f\",\r\n    \"0x4b82416bba3d27bce3e73a767b306885b9b6af5d\",\r\n    \"0xdca2117b0e0375c4c9ba107efb56cf30aa8a4f12\",\r\n    \"0x8100c53d76473712fc80e552a0dcf75c055688d1\",\r\n    \"0xae199902a3f32f21aba3cf2e5bc428f979ae8013\",\r\n    \"0xa1b1fb37a0c02b00073bb666022dc1d90b1370c9\",\r\n    \"0x8f15200f2bb9c26038062ccb43692902716b784a\",\r\n    \"0xe7aea96796cedd36911b5388b11098e1b51d5fa6\",\r\n    \"0x7d39ffad89142acae311ea6f30558138fd58adfd\",\r\n    \"0xe66bd712964ac2c2545a4de8122b9b5d50996738\",\r\n    \"0xaa7d1fad2722b8154b241ba299ffc1351e4b2dff\",\r\n    \"0x2ece61350dfa227278321b7d8a235a9ab58fd1c3\",\r\n    \"0x93713d5b6c45689e1a2421182d1912b4bb9782f6\",\r\n    \"0x9802ee252b56a24c1de670e606d1591737c3e411\",\r\n    \"0x5098a31d8b422cfaa395e4d4ebe1236a0fd876c6\",\r\n    \"0x07f08d2ad4ced407b4bdf704c4ecbdcaf9267a20\",\r\n    \"0xc690866c1acb3213a69831437a00783023d7e976\",\r\n    \"0xc52e043a58f6571839813d0563923c03d5873870\",\r\n    \"0xe87a94ab46202643e7878855d51ad60e6f054d43\",\r\n    \"0xfd37a790f93dbb86f6918035c27afe00fde8fba9\",\r\n    \"0x4a5ff6908f6c8ff7aa91d44ae52dc44247252df7\",\r\n    \"0x9d5b904d5029601ac6295300f059a1550808ecbc\",\r\n    \"0x094f0ff2c27569c3e76169d46ae76a579d369c4f\",\r\n    \"0x57c7fabaa998fa7149134a3a6ce832da1753c415\",\r\n    \"0x851599df0dd65597c16d46d1b728f51fa8d015e4\",\r\n    \"0x0109599de5b72e165d899c46830bef01885c92ab\",\r\n    \"0x7f9f2e7cebebdfdfabcf51b752eddbdb343776bc\",\r\n    \"0x4f78c52d25289780efbfa4e4de43f5f5074d7f58\",\r\n    \"0xaaffb89a2e05c71c477bcd6c0aaa1dedfcc98354\",\r\n    \"0xc2e2dcb456c99180b4d212344189f5508e11c12a\",\r\n    \"0x07073d6cbb246b0f268d3c4e8825be42c0a706fe\",\r\n    \"0x18b9f3233c0e8343794d920a78c71a31ea9b0f29\",\r\n    \"0x07240fa32d462602cb5bb7aeedde23a55173319a\",\r\n    \"0xa6beaf92cd1c17f5be82831b180b18f1eb445897\",\r\n    \"0x4e6b841e6a65d4be21631129f2fee2f8213ecaca\",\r\n    \"0xe40d6dde6a59097d5d556d8b7791963886f25cc6\",\r\n    \"0xb19ffd17dd903aff9baeb2aad549073310998597\",\r\n    \"0xfaf65ad9bc221eeab599796c58d72ce0d129a05e\",\r\n    \"0xc36d5e2d44e014537640bcb6415e711a9fc76f5b\",\r\n    \"0x3a9fd840aec2a4b46f4692a327278c135450fd59\",\r\n    \"0x9cdbbe461ef041f68482559df7908aa84f4b75cb\",\r\n    \"0x6230da7cfa5fe6d51a3e6622e4b93f7c90e08c41\",\r\n    \"0x6ef355315bf8a98fca2d3fb75d018e162a7a8621\",\r\n    \"0x51ae370cae5da378a7b00b9405237d0269d0a6dd\",\r\n    \"0x3ba63d65a5b912cdad9daaa12799b20e7d3f11b2\",\r\n    \"0x442059fb25e35e7745626d106d1fff6f1fc28d36\",\r\n    \"0xc01e8d274ae0af4f3318b29484f38ce8767114b1\",\r\n    \"0x461c1a7be3cac97690e247d6afc1c8937f57f7b5\",\r\n    \"0x5af05e27083108fa055ab019c17f02ba62a198e9\",\r\n    \"0x5881053383ae586393c73d5d2ce3b35a6d9f3b10\",\r\n    \"0x762e2f09b8ceca146781188c3e8b5f475f7b4a89\",\r\n    \"0x702cb38dc05e3dcc5300eb288a30c9507809b21e\",\r\n    \"0x010a6da17a6897bb6465df37c6be64669e643f96\",\r\n    \"0x4b2d6816f12978a751fa616c61d7aa90950f4ade\",\r\n    \"0xd19c6ec2a917579c7e89cd54745ad219bafb632a\",\r\n    \"0xdce20369f486dcb43d3a1e2e5d5abd4e7fe475d2\",\r\n    \"0xac967dea259902d9f8d34c3cc59332d7fd302cf7\",\r\n    \"0x70b4ff51f7b7273ca26c2c41a2f5300500c23e25\",\r\n    \"0x9e1d38565c4c8d0a2deba5a4de6ce0d3b8132343\",\r\n    \"0x6cbf3557c4dfe221c0f6d1778ee58c9dfea4f3d8\",\r\n    \"0xec69e038d9caa08f5a8e7b722771389453b459c8\",\r\n    \"0x81e99ea05ca8b973016a22274683c86250efd9fb\",\r\n    \"0xcc3d7f9fe6946979215a901bba385a88fdabbbf4\",\r\n    \"0xf717c5a8ab3f70ef95f94880630d2f2369fa5c16\",\r\n    \"0x8275921e35468ce3bded2d2f365c6ba8328c8565\",\r\n    \"0xf3804f633d8a9a6cc626892e4fa7a2720c39ae22\",\r\n    \"0x498a7b5fde6c0344b9da88ff92fe20fe1575f832\",\r\n    \"0x475d4dd426e45dbad8f7600682c811e35f22e96d\",\r\n    \"0xc826b41f866e60946e78aeef737593dac62940b6\",\r\n    \"0x0222529af93e82e0d5ec890ebb73e7489e95caa4\",\r\n    \"0xf53fbf26f8e1bf92a7fc0ffde613c69610409f9f\",\r\n    \"0x0bb1988600451169e2aa6f2b3f800baba25c8ccc\",\r\n    \"0x78786979bf49a4a657eae68ac02ec132eb3f99de\",\r\n    \"0x481e2132c0583e9140bab6b9afc3ab8ceefb277d\",\r\n    \"0x99866fa1f779af580f805915f18a4897b20fcb2a\",\r\n    \"0xe2625262b78b810f28dd717e8bdcc601e0149719\",\r\n    \"0x7f0e158f9f7436ca6874c0c67c0063fe5f02d298\",\r\n    \"0x8b0f2817021d1bfa2b9c2022b8e8cea6b8e7bcb8\",\r\n    \"0xea0bd08c9d99470be76072ad1b502930adb9df43\",\r\n    \"0x889f9968ed6cdb36d2054ca5e00d1d6f897635ef\",\r\n    \"0xbf78c93cfde5500d1cf6bd1e0eabc2fcdb2770b3\",\r\n    \"0x765ff99dbf46360ccf22a616cfc51771d0b3a7d4\",\r\n    \"0x266dc78100d917bedc1cc63658bfc60d26fd0801\",\r\n    \"0x9a5bc7681c619f167fa47e9d462486d03bb520d0\",\r\n    \"0xcd0dc9742e741dbc1f1ddb3e07255def16714044\",\r\n    \"0x4e6e5a19e9096ab8ab568743c75b4a07d1d294fb\",\r\n    \"0x7d2b3c588e7adccbd284e4ce1e5e8df435e13160\",\r\n    \"0x0fd49f8914e1f52f22d90645fd3336da5e8ce83a\",\r\n    \"0x2465bb61412a90effaee7eafbc925791184a25de\",\r\n    \"0x2d2f00f04fafbc68077e0cf0499c96a500628ebd\",\r\n    \"0x067a740323e2456c40e0b114cb2b04ae80f9e283\",\r\n    \"0xbc48e05644b050b98aeb574a943b411876b5e69b\",\r\n    \"0x7f418317b93240d61c3489378273ceb91c73e483\",\r\n    \"0xc8c4a4d033befe49d23bdb0d54b3fbcd60b63383\",\r\n    \"0x0a41df848952bbb8ecf15bc6b4de374dbc5f29cf\",\r\n    \"0xa7216345565077fdcd05b1181203ae36ad08c865\",\r\n    \"0x052e323e1e82ce20cd92657ef84d2abea8354af3\",\r\n    \"0xb3f98bf231d20b38d8be69336acadefa44e6288c\",\r\n    \"0x4b09b1749716cd044fc6b6bc4e3bf0b1ba5f9e14\",\r\n    \"0xc9d242495df66626e1742d8e8ec44f2a4d8b73c2\",\r\n    \"0x3766c5b09a02eb72f75ea8531caf7e00a86bf48d\",\r\n    \"0xd35f1397a36d7fe3ea78b8d93ba069aba122ffb7\",\r\n    \"0x26341029b8a624fc072706b56e7b3252d616bfa8\",\r\n    \"0x599179c4595bbb701647ebbc412ca6ebee57d993\",\r\n    \"0x816d3b4aa82e847358664072f77110f135671b77\",\r\n    \"0x70b26a35f8f308ef8286798c33b4f7a1811c7630\",\r\n    \"0xef04e62bdfeb5fbfb5a9dcd6ec69d4b58e123bfd\",\r\n    \"0x4cff569550ad1a533651c54f57757909852eb45a\",\r\n    \"0xbcb3d7af8fae4cc8e0036d57446b87deec8e07d2\",\r\n    \"0xe02abdc942031d4575fe14e9cb4216c7708e33a6\",\r\n    \"0x13fc4dc02c0254aa8bdc91099dbe98e54d27d496\",\r\n    \"0x3c6b160132040f5880a6501a51a832ddce522781\",\r\n    \"0xad8f3fb07070f5cdc5b046bc6ef9d506fbf3af3c\",\r\n    \"0x09f219010b1e19b63b31ee9bbe369a04b740e921\",\r\n    \"0xdd0250ef9d30192cef271241d59c8c503b578b01\",\r\n    \"0xef0329cb9115296309ea55a6e88e40d46bbfd7a5\",\r\n    \"0xfb7494f48bf66879637b9f4a2a5199f014061296\",\r\n    \"0x0a164eb8b5d6d1ebe429d433361badedbe1aadf6\",\r\n    \"0xc076cc20c0b43ffe3ff7e12e6c01bd1d213131f3\",\r\n    \"0xda6d158cda5b627af7991e51ad2a6a8f8e33a5b0\",\r\n    \"0xdd49ddd6068fec8cef9f9f6b2150d5d5b10a5eff\",\r\n    \"0x248f8487a2ea075bbba35b3fafcc5c8656177e0e\",\r\n    \"0x37607c29d99ae05251bbce45deb00f41ded84d9a\",\r\n    \"0x26773c55984002c7a9e3b36d5a7e1604b245af88\",\r\n    \"0x235594f2dd98d224fcf2b0dcbb02936aa9e1c38f\",\r\n    \"0x381ee9ae9f69a6578b99e92a58bf6713dc587972\",\r\n    \"0x1ee456994a481cba18fc5e3dc6d4ef8c8261c518\",\r\n    \"0xc113a0d98e80426d891d10a72cfdc05098b0c0f1\",\r\n    \"0x96b016e0acb233a39735f62e140c2a8312b1726c\",\r\n    \"0xe37fd5d15c92a2ce6b96df88687fd3742d5a0a4c\",\r\n    \"0x854e07e738dcb7e629ba467ef66a25e8998a140c\",\r\n    \"0x0dc00c1bc349bdaec7400edef763e00afb5317a0\",\r\n    \"0x8d71362ce35d7970a17c1365bfbbfa095267be7f\",\r\n    \"0x671f34163bf973d270bb39f9221bb7c9d1df18f0\",\r\n    \"0x93deeef315c69cfed37b3a9d040df0053fe7bea3\",\r\n    \"0x32605fb42391b9d866249d5a9e72b58f53c5eea4\",\r\n    \"0xf43723edeebe5ffa6825e5807215b8207147ab0d\",\r\n    \"0x8e0d9d3d7cc8950d6c1afcf0085afc433ce35a47\",\r\n    \"0x1cbdde6d31409605b7c48650acabdf9948ef614c\",\r\n    \"0x994005b38cf3a04bdad74725c8e5259e8908f716\",\r\n    \"0xfc1a58c75c7e311ecac7125f9f01cc0ea46d15e9\",\r\n    \"0x7b290e10354f187a6b3f5448d87d9d11b8cd2336\",\r\n    \"0x154fd1e2282125cac14be68128cbe277c75e63d8\",\r\n    \"0xdad25e63fa968ca3164030de2c964cfe475dc05a\",\r\n    \"0x62dd2bad73c4188f5fb7969a0ee2b50dc05f5d16\",\r\n    \"0x524682f214253417ee7543601a9ed8a7b06f3aac\",\r\n    \"0x88ddb824821f215c289874a2df072c7bda91fe06\",\r\n    \"0x3e052e08bc71e6df10d82504f2073516efd37a7a\",\r\n    \"0x25dc5d2de8c04d64800a44fa722a58fb8aed8909\",\r\n    \"0x63053922db910582fe80baba61cc054aaf79dd09\",\r\n    \"0xc18dc7f1801a325f5b165a26890bd267fa815b90\",\r\n    \"0xa2b2701e6d092b73760e2c1cd6de477954cdf066\",\r\n    \"0xc37decd293fb5afb51246aaedd359036dc56d771\",\r\n    \"0x2fdf7d4a741e8584e9015058dedc1eaf13f76678\",\r\n    \"0xa33d4b3f47b870cae5a689e5373a53182a4c0377\",\r\n    \"0x3fb51bf191685c59e8e5ddf0f9e849fbdf27f56c\",\r\n    \"0x6ced2037b3a4693162d05f31c97e31a39ef8d473\",\r\n    \"0xb876cd1b7843d93dbb7f6004f672dba6bcb6a462\",\r\n    \"0xbf6ca9f0a0d8005920efbfcb68813df6d2746de1\",\r\n    \"0x5db447eb1b37232f1a8020f911b1ca626513de44\",\r\n    \"0xe1954558b3dd0ee0f2fe3177851e1a67ac7e1289\",\r\n    \"0x8d0835f8fd7d77a6780926b2946a82a2af4f1fa2\",\r\n    \"0x47d407626bfeb6392828ff63ac124ccbea2377ae\",\r\n    \"0x7b71492e3dc048c3da45a23695933acf1b83b66e\",\r\n    \"0xdb79a75188220c574510e8dabfe31031a293d9df\",\r\n    \"0x18bd50cbece3f877e46c3e1a1c11a6fa3501d7f8\",\r\n    \"0x3ebbe7f030f8ad80384290f2966826fcccbb9ad6\",\r\n    \"0xa3173fa04fb9c935b034d90082f0c585a09b3777\",\r\n    \"0xb028bce3a1a26266026151dbc9397a97fd3d7a83\",\r\n    \"0xe60a4b9cfb190a67e4080a19b88da02e0b1f8f4f\",\r\n    \"0x7fd5468e969be3ee79342bd6af7b301af4423590\",\r\n    \"0x1fec09d284e5feb2ff4df2353196fc501c0b52ed\",\r\n    \"0x2b30b13eb37852925dbec6248bc0626dc1e753cb\",\r\n    \"0x1868fed27971fe87c16fa17df4bcdc94ebe538e7\",\r\n    \"0xb863240ddcd40ea34fda172770259cfed692f983\",\r\n    \"0x1aa1d02eef0baecf743b542bb4e445bfae5eebcd\",\r\n    \"0xd92e15ad34022f7565f2b3b8b659873ec5235ce6\",\r\n    \"0xf04cec6b6e2bf8e074aef055be12b0d1364fb06f\",\r\n    \"0xd679b8fcea30fd9cb0a9de0094682922ac603a36\",\r\n    \"0x17992f90a02d1c4d9a4ccc54f2cfb37176aa1cef\",\r\n    \"0x7e8930c57f7b39b3d74aa7c9a21e1e2c61c421ee\",\r\n    \"0xb7c84fd35cff3d5f63c58ec8fa335001866997f1\",\r\n    \"0x8d85d37c53aea6e51a4863104299830161d06130\",\r\n    \"0xf2a80f4ac0c7534c7cf26663f60ff37b976ab5d8\",\r\n    \"0xe64051abba45f79eda1354c1b01852fed84dbc72\",\r\n    \"0xf2e109fac5376ccd3233451ec2fe8fa5475061a7\",\r\n    \"0xcf6f954a00763c6ae932f33b943cdc27c228c729\",\r\n    \"0x2a137c6406e91d7d1a701293f0a58388115075a2\",\r\n    \"0xfd6e61f8c8c280f1b4ff7dfed95458151bc29b9c\",\r\n    \"0x48ed2b559c7e5eb86148f319b70c9edf493c6d8f\",\r\n    \"0x8359a877f4cae6c37f3fd99fa7672012f15db68b\",\r\n    \"0xabb027791d4c143ef592a0b1ab0bc4b6414ff4c7\",\r\n    \"0xb2683e150c7b57f707656dfacc39bce9695b63ad\",\r\n    \"0x45d4fd0295c2e9fff9c49f0ece26a8ee29ab7fbe\",\r\n    \"0x9fd6b42522364a5015984e9d34b0e28e0ea27b44\",\r\n    \"0x175832af640cf8e881d933820779da9dc1f4aea8\",\r\n    \"0xd3541bd05698e67c81b4405eaabd4d82ce8869e0\",\r\n    \"0x297a0bcbe9f151a65a0a8ee40c03033f32bc8fc1\",\r\n    \"0xa34966fc85009bc030504bab100640e795d49bae\",\r\n    \"0x6831942e2ecb3a6f08bb7ecb4b960f3ea59d5e6b\",\r\n    \"0xdc3352042ff84cd29ab5f8352aede50654a6b006\",\r\n    \"0xc57910d79223d068773d9d4fdad7385c1fb2f828\",\r\n    \"0x9fe8230e6f5e7998275ebea47e1d8966474fa8d4\",\r\n    \"0x9d31e082c16cc0db94ebbe87f203efe54230eba7\",\r\n    \"0x946b8e47be5884fccbcb4cb6952f313cf8701289\",\r\n    \"0x97cfddc670ea93f11054582dab28b12c2f185f71\",\r\n    \"0x2ddbc7f39cda87e838bde64824204159031b5bd2\",\r\n    \"0xa501e66a2a72595bff0ea4a760457d318d942da5\",\r\n    \"0x79041c4560745fe956547f29c2d948b64ce8462d\",\r\n    \"0x3275e0d9507fc674fc0fe3b5f0a0d122794cbbb7\",\r\n    \"0x6f5c0ef6364dcc96c4ed1a07de2e1ef81304c747\",\r\n    \"0xd5323d743d2c4ff6055e5467e093a0aa9debfed4\",\r\n    \"0x0bdbd04312a48e601bf11be6da01cbe82983e927\",\r\n    \"0x6749f586c2a539e86b231dfa2ae5432a71456c42\",\r\n    \"0xce4b59b8c64f8a23cdc3d79a667db25ff0b80a87\",\r\n    \"0x102bb1d803b161fac12a3f1b30bf7d2b0d816869\",\r\n    \"0x0725265573e4b7d3d3b5f63ab54f4a4bc135e755\",\r\n    \"0x50be803a6b60193fbee372ffa9c477d425eb13f0\",\r\n    \"0xfd43e99cc8613ca86b1ca03e45a3333e5584e5d9\",\r\n    \"0x38983cd67fe600e13def1344b9552335b5da70e8\",\r\n    \"0x5401bdaf7b22b40825a4d62b598c04673a38d9e2\",\r\n    \"0xf8be0dfda0d1b77a57f70e17bd0453fcacb4dd4e\",\r\n    \"0x76335c4fd572f3234a0cf44038a5f368d000a971\",\r\n    \"0x5cf3f4e29eb5a6f5d1a05489cbc1962f2ebedee4\",\r\n    \"0xd50bca7339bd47765886dbba78aa2ca73ecd92bf\",\r\n    \"0x59608e45e84650f47eec658e60f4d456c97a7842\",\r\n    \"0x439ab12d0ba42a80e7320a9c127ce6304b282e86\",\r\n    \"0x7c3f480223885ae0b612e638cd69d91f02b3a3f8\",\r\n    \"0xc6cfdc8b66d2d78cd6dd92f94226550810570e7d\",\r\n    \"0x0ed8d7b7579ed1cbba7eee7ca2e03e0594c8217b\",\r\n    \"0x7342533c3f36669138f45c2f76d66b94785d92d1\",\r\n    \"0x56c03458f773fb84eff2566ca4e7720e987156cb\",\r\n    \"0x5144b03e692057443407e8b0a6944c7dc1a78473\",\r\n    \"0xf3657657d1e1464e5c70108703c4009287131765\",\r\n    \"0xd5ae368c45e84bb65098e29f67c191369b3c4bd6\",\r\n    \"0x3b75c957e9d394eed0057a32b39481ce0bb1da25\",\r\n    \"0x3dc5298eca01e265694530eb502898e782095bc6\",\r\n    \"0x0913fffbc33d8bff0dd5ac994f874f03ccb2532a\",\r\n    \"0x1695c8177628025da48ca76f0fd6cb38e4a014c9\",\r\n    \"0x98dd3934d1fadca4efa286ae322d1c4d1154bb2e\",\r\n    \"0x0098fb0d85882cc36a2da9cb2198710da579c21d\",\r\n    \"0xa48e90c18602f31ec74e73dc3c29ce56317ea5e8\",\r\n    \"0xbe8d3b054610b58b85efe63b24d3db51bfca6d61\",\r\n    \"0x53255578b7bb68d226a59c0c2363b93288adc15c\",\r\n    \"0xf988fe6f5973380435dad79645b73408f1ac12af\",\r\n    \"0xb95400fa58425ad14117925da5f80399ff7a2c24\",\r\n    \"0xfcb04b08f6709a14586ab03a38f4aaed47fc4dfe\",\r\n    \"0x4364dc1030488b2613ecd4d5f0d58e4d02464120\",\r\n    \"0x49492d66f8a0ed12ad3bd0d6b25d7ff2422e3e5a\",\r\n    \"0x50acef45f242a3a3f3efa2ad7039adb8ec0bdaf1\",\r\n    \"0xb42942e32087d30de121af960f68dc6a2f6922e2\",\r\n    \"0xd610c1ef9fe2506ce18f478bfa04f60db45cff29\",\r\n    \"0x9e9c962dac04cd530d72ed4af9a3057d46a911a5\",\r\n    \"0xdd39777a5f0adb4969a5f7d9c3032f6d33a05880\",\r\n    \"0xabbe2a4a6cc9ff1e1d64346b9367250b6c2fb2dc\",\r\n    \"0xf7dce694a9d0326b6c4c039a02a17e713a009829\",\r\n    \"0xec3048ec71269306d0db67cb60b50bef64c01877\",\r\n    \"0xe596ecaf53d9609d4833475676b99c81ecaaddfb\",\r\n    \"0xe9c3757405ed71f9c916709563646e244e6a6980\",\r\n    \"0x2103993f3602b0c60e4205790442046630a8d1b3\",\r\n    \"0x8a978048d0a0d28da9fb3570e5985b32ca036180\",\r\n    \"0x66f0067bd228f953fa7ef23196556c081752f701\",\r\n    \"0xe735115f5eacb98de9a64c5124990e989736a931\",\r\n    \"0xb38446ab316545fd50c2c680f76eaf13527e38ce\",\r\n    \"0xa0a7441299b898be00a488ecf4ced33c54c7f676\",\r\n    \"0xc0166b6a9b7e0f8fa6fd123002afe88c932050ba\",\r\n    \"0xbab8aaece928239d01b85c6d7ab69a204ce03972\",\r\n    \"0x4de5177ce6ef3e34f0dc83c36c2ee19819f078f9\",\r\n    \"0x0f518ae914869f94d9756f7384021b5b736f65e2\",\r\n    \"0xf381da429c7330fb32e82cd52dfeff9dd1b311fb\",\r\n    \"0x15cf49ec095084e50b67a63d7caf216c1c91f687\",\r\n    \"0xb3940cb2a463ef92477074b7b35a7ea7e04b1f07\",\r\n    \"0x574d30bce4e7aeb9e3981bb91749939734e478f2\",\r\n    \"0x668c6e3e9613172857b9ef53399019e358a06e6f\",\r\n    \"0x88fa06089a6022026aa94b95df171d0db3d49b49\",\r\n    \"0x8966be118104a2db43c58171853c32dcb5350ea0\",\r\n    \"0xcaa0e6b3f7dedd7a66038bf46cdbe4ac14564f57\",\r\n    \"0xaae2913079ee5867eebfa139db1d934ed6ba6ba2\",\r\n    \"0x7729358c063d812c2c12f585ea8d9d2211a8f3f9\",\r\n    \"0x1958997b4398d71f2ea9478a58fcaddfd5e9e81f\",\r\n    \"0xefb3b452898e926b1fd26bcbe66adab7e7d4e76c\",\r\n    \"0xb016a5836c0f7c65d266aac707c94f78becbea6c\",\r\n    \"0x76e271466b1bb93fef159ffb3ff5842a38f4f016\",\r\n    \"0x6ac07e64cc799bf9f4f701a5ccd24db0b4cec699\",\r\n    \"0x02ec47c8e45173d0f1e740d81b25f9020cfc7faf\",\r\n    \"0x847c86e47218ace4751ebe698bc4370af1ac7e93\",\r\n    \"0xf0ece0a906d832c27cc3323c57721ec725a33815\",\r\n    \"0xd02a6bcc4a4a62e00519ed55ccdd962c057801a3\",\r\n    \"0x71fc73fd152d1e556e44ae6ac9dbb792be576a37\",\r\n    \"0x392e38630fd86ac52ad4588fb3383fdac2ff21a8\",\r\n    \"0x9d4599d1df6623d286b9c242e075666a5fd75d85\",\r\n    \"0x8f017ec9bc07280057a601095de34518897bb734\",\r\n    \"0xc4e58fd97ec29836a498e8e22297d886eaee519a\",\r\n    \"0xbb13ee738c6cf88655ea5b37c612c3af40ff141d\",\r\n    \"0xd8eb1a7eafd05b873645799d058acbbf83845b2a\",\r\n    \"0xddb87d842b51a3a2d442c2a144fee3bfe601f658\",\r\n    \"0x7749a8beb879d61d49b2292dcbca3bde1da9eddf\",\r\n    \"0x66943764bd03e6bcf58f77cdc908f1746ff1aec2\",\r\n    \"0x886c83fd83b9ace22b7398ddaa0463c9122a287c\",\r\n    \"0xa6575fe1ff1a294a17934a9cd0e1e656b96f550f\",\r\n    \"0xeb684e78e3145e2d2b3463335425c28c47c7b699\",\r\n    \"0xe08df3703452317fbc65eb555c19c33644f8a5f3\",\r\n    \"0x52bb39647c11edb5a4a70150d7cc68784c3839e0\",\r\n    \"0x58f43e3fcd2e5d4cb93c1e6f2efda1197eb6bea0\",\r\n    \"0x55095fc6ba14c8e473e62dbe87950bc59904625e\",\r\n    \"0xdeebc1c76ed6d20bf148c279894874e6aa29d003\",\r\n    \"0x784d7ed801c4de6ab9128b2a77d1d8439a8288cc\",\r\n    \"0x4919882907003b7648189459dd944e7c0373504c\",\r\n    \"0xcf39e32185d8a2163bdfbaa607b6a3f729af1d39\",\r\n    \"0x9d1d1d6ccf27f9abc2d1267b8e0652f494a92244\",\r\n    \"0xf0f5e3f6a320e18111919b99ca3e43d5036f78dc\",\r\n    \"0xf1c7ca5eeaff1591d7fe7e648f5acd71c8fbe12a\",\r\n    \"0xcb9828309b78a326dc1d8f5b7185ffc24480ae44\",\r\n    \"0x6bbf0b3c6b3cb5682f887313766f449ab82ab339\",\r\n    \"0x6cdad9768cc942e3a2078267cbcb54d9e3b0233f\",\r\n    \"0x12c35e8abc09c91da38d788ecd95eac7f3162a35\",\r\n    \"0x7a26ea5e55b18a68b7c06c8f68baf367fa7c9a09\",\r\n    \"0x47acf4a292a26d4c679d0e7d1f2c60ab4f7cce4b\",\r\n    \"0x0e5df8db38ff953188143ad04654ccd0fce5dc58\",\r\n    \"0xa98ecf82bfd3ccde9c013f778efcf589a3b6d88f\",\r\n    \"0x29aef18e896814c7a9d47acc3f9d1bc9630201ba\",\r\n    \"0xb1b0692ae18ecf9e22e4988ee278b8e669dbe92d\",\r\n    \"0xacfce08fc987b77a708dcae8e6f5be0c134e5879\",\r\n    \"0xc7cb310f5356a548a767a0140799361a70c33628\",\r\n    \"0x8c83568b8a79c2b4382ca60000af51e496b284a0\",\r\n    \"0x3dac41993b65aacc61c469a99c8f925fd7a12e35\",\r\n    \"0x9fdb8a322699babd90a40861b92c6ac6fe84e591\",\r\n    \"0x8721b1c0a1f30b7d9705b5eb95d4dbbd1cdc7be6\",\r\n    \"0xfafcfc3d0c5865b2332f534f3cb5701e80d51d44\",\r\n    \"0xfdf37e0730f7fdc09e8696780869df8429bb3b74\",\r\n    \"0x49d1978dce1a788a0e33ac59c004e5fee4093e95\",\r\n    \"0x76c388334e73112c090151b7e40fdc0c78449313\",\r\n    \"0xcdb10cc886051d918ad78f0d6fffaecb8248f84d\",\r\n    \"0xe078b849f801784eaee5308d81a0da3df7dc3399\",\r\n    \"0x50336de3f1e8f5df71dc0fc3bbc7653cf45c5a33\",\r\n    \"0xe4ea62cd7cb02d40b87fc7f33820d1f4d2590c42\",\r\n    \"0x3fd33b6675db73afb2d552adead2754b8ff0429a\",\r\n    \"0xbe37e29fbe47228eeedacc809a1a4f85b4b8cf35\",\r\n    \"0x07d536f0d3e348770b23e007e7e80f766c1cf2be\",\r\n    \"0x3b515c1a5b02ed052ab3299580f01fdf480ffc8e\",\r\n    \"0x214f797d05f3b4fed68cb91223ee6f8eb3671645\",\r\n    \"0x17e999673938c86392b60caf1cc740c5f7af0d35\",\r\n    \"0x1f9747d848f8e11a2ba3dd97bf0657123bcf613f\",\r\n    \"0x03515c868f0452520937bd462c7b3cec5eeae2f8\",\r\n    \"0x3a51ca9cad04fe79a10b9a8c4efeedb2b054344d\",\r\n    \"0x7b92a1bfddc4bf47b8c6297d303b282dd8dbb57c\",\r\n    \"0x572e74f4322370df7b505f3ba5eec5c9c88a0b11\",\r\n    \"0x1ef24659e4bb6b5d33a2cf1c2ec7c86f9e876743\",\r\n    \"0xc44c1f6c976893f599b3fb86ef50f5505622bc69\",\r\n    \"0xe55e90615ae5c216085ffc33209de213d73dacc3\",\r\n    \"0xcb2c3d2ea04947488a04ea8f1336a90fdabc83e3\",\r\n    \"0x89c8882bca9d8e9b86a2290a686e5d53f5a265be\",\r\n    \"0xfc6136fb52c31438b62a5e829ddfee24328cb9be\",\r\n    \"0xce497c084aa89a9906ab7080585a702d2215f72a\",\r\n    \"0x5ff209779b8adccb74cee7e37ceace0c380a9df6\",\r\n    \"0x4747cb96a7ba432ffff4dded523fab7c061a590f\",\r\n    \"0x522d1f772512f1b1b55169d65fd62eb3cfc29bb7\",\r\n    \"0x47a1f70a86d13e315e7853130cc4a9276eab35e4\",\r\n    \"0xae18e749355e71e39355f4a2ab9ed262d4ce5069\",\r\n    \"0xeb976ff7fd161d5800900128922b95c267f70a2b\",\r\n    \"0x8e473f169f6a9221ff1497c2b5d9cc3d6e0c1a97\",\r\n    \"0xd6c24874b708ef6716e1fccbfd4de5c61a87ca85\",\r\n    \"0x10c0edf0765a415528b182c0a185759ccc1ccc69\",\r\n    \"0xbad70f3457005f44ee3da6db5fa9657e3b0eb96b\",\r\n    \"0xc3aa67723004b6bbd263ac763187809626d4df09\",\r\n    \"0x9c9695f10788d27481df69b784cc5b820dd870b8\",\r\n    \"0xb2ed50b411a381299b4ba0afc01f390b167db540\",\r\n    \"0xd92a1c4add5dcbbe274187926101084b8d7e4360\",\r\n    \"0x81e7a961db4176bafc30ebbc17c12a20392fefe8\",\r\n    \"0x63e9f728f02c8e45c80b450d6aac08474c04e019\",\r\n    \"0xc20b3952402997b572cce71130a7d34a867afa41\",\r\n    \"0x94e6096547fc746361b9a24d070bd9d1bed30615\",\r\n    \"0x49097f571684af7ab323c6375885f7a504c4eabd\",\r\n    \"0x8b6b7cd9cf40d1561532b7bc9643d12139a45f8d\",\r\n    \"0x69440f6762160eb39bb41fa438838b535379c180\",\r\n    \"0x087073c708458f0db1e293abca757c6d93f587cc\",\r\n    \"0xa32a44d35df760b78e8435bef175ecef511eea28\",\r\n    \"0x980616b21dd228253da48709c293808c778f4746\",\r\n    \"0xca3ae2e18d745a29d73455e3434d8414b7c1fad6\",\r\n    \"0x483cdf9809631c132163ce482368efcd8531569f\",\r\n    \"0xdc2dad6d4251a99cc0127a33df4073da87248ce9\",\r\n    \"0x631fbbee8cae3bbf3b4e2ecc2919057c9c893a7a\",\r\n    \"0x326ef2fafb666f43699034541e37b42ad528972c\",\r\n    \"0xe97791fd30ea4cadb9444faef13bf8070ef7dc33\",\r\n    \"0xa0ed98caf5fb3d84f59ce050d7821da7a1188d18\",\r\n    \"0x1cdf8cad03347716ee3f474631ef1b53e7ce929e\",\r\n    \"0x6122e2a26ef35b4f3848a519433f2e6d868c192d\",\r\n    \"0x6f3fa1ff84884bdb38271afad1b1dded80e10e5b\",\r\n    \"0xcb75e833c9aeb830f1761ac14708fb63ba8e742a\",\r\n    \"0x2fc8db036d6a897d6ee361566edd3426ac915582\",\r\n    \"0x5491984563e47cf17106abec4fb6080b542d9622\",\r\n    \"0x9df69b60e1912cfa7d518244ffcdfa41603ce8fc\",\r\n    \"0xc8da3ec514c10784ed7d37f6fe460fcbb1c4cbb5\",\r\n    \"0x410d45b8ec5af1924c711a3cb2c78f8677cfcd51\",\r\n    \"0x27c22646fc7c43004afb4aaac3184c3df5302429\",\r\n    \"0xe56155a1a8675d152ff027541b0bb7899d74221c\",\r\n    \"0x912f9d101bba8b3a5341dde17280b871d9c0780f\",\r\n    \"0x069b294687f712ffd9f849a35bffe2c600fe06bc\",\r\n    \"0x6c98b25b949fc472a1edb53633d951e550f0dcf9\",\r\n    \"0x48a6d87ba3f02c9bcb177a298f74fe8fe461d410\",\r\n    \"0x809ea65db5db1232a521602312e88b04195bfeb5\",\r\n    \"0x8f4920306e4afc18ce74fb0ad4f87d1363b725be\",\r\n    \"0x716ee6460d46017ad168285b663c8e4d6f0f45ce\",\r\n    \"0x22fda2e1e5c3b56479bbb6fc4235138d1605bbc9\",\r\n    \"0x73ded8bc8a34821e11dd852b16b222d5ee27b5b3\",\r\n    \"0xeae9766f53d059e7954cf40113040f4014dcb530\",\r\n    \"0x9149c691e08751e1a39c00d6daf50b2ec81abe71\",\r\n    \"0x55dc054aae7061c7cc30b91964ea7c6f6a9b54ff\",\r\n    \"0x021f172eda4ad5c5f7b7147def3d1e8e3cce2305\",\r\n    \"0xc29eb8176da14db612270bf56d6ca58c8b6ce346\",\r\n    \"0x0ba00e40fdbec52d03aa7fbfc53fffbbb685f424\",\r\n    \"0x1054bd99ae7d79ee2ffc4b2735ab561f8a43e39b\",\r\n    \"0xff43cd4e761feba96bf3221ffab4bde25c208f9c\",\r\n    \"0xa3b73498dfc2784ac2f99624c8dcc927a0118baf\",\r\n    \"0x630c002d4bd0c25a9207cfaab0795b8a4161946a\",\r\n    \"0x71b58a6669c43c2872cdf74c01b8c048a8a5d28f\",\r\n    \"0x1ef2d41f5e14d627b929504ea58a2d1b9e535cb2\",\r\n    \"0xbac4944a4177196dd56081413989fc29b69f6e17\",\r\n    \"0xe8a1f3b6a6035fca7a5a52e746b3e23d0dfef6b9\",\r\n    \"0x6fc68a64e117832d5809267ed62a19fcf9e9794c\",\r\n    \"0xc66c8a440069b61622849ef477ff9f5461effa16\",\r\n    \"0x75604ff31d88916fe569abc6eb423e85be253c8f\",\r\n    \"0xc8a5d960758116f24aa45e293c5e5a8d5b158977\",\r\n    \"0x2850a80d9456f09c6b104710e9fc027f60f42b8d\",\r\n    \"0xfaf43caad126d5d1cd36452724ecd098de66e7ba\",\r\n    \"0x59cc8756aec8c7188214eaa82c7d28cc1c6d95e9\",\r\n    \"0xa9914ce1a3e7244c14856a6c51d12cd0cf26bef3\",\r\n    \"0xe1e5b6a361c4f921063855808aa2a9747df87ffd\",\r\n    \"0xcc74ece9d1ff7f664b81153ff5470d775e8bccf0\",\r\n    \"0x34f7126f385c2681478f1fafa8f7cb5d57b062e1\",\r\n    \"0x77c69a1b5569dd018f3575271d6ec0960eb2f4dd\",\r\n    \"0x8473635ab95ce61570dd2c08eed112069ce54c5d\",\r\n    \"0x8564642b22690fea4c39ada05adf4f2227e7ffb9\",\r\n    \"0x4d7e068111fb3ade56811eafac7dcf814ccad673\",\r\n    \"0xa98622d38906d32245baef2609ce9398518dfe80\",\r\n    \"0x1eebc51c72d8715d9eb8e53e88f6ab2a59f6b845\",\r\n    \"0x96a04f897c9af154c6121bae077ae620106b0ced\",\r\n    \"0xa515a52838d2ed59e44d6f55a1649e5b06c99e66\",\r\n    \"0x31db535f3eaad1f1cbe2cd7b9e8381fe55ac20d6\",\r\n    \"0x69ca34940b1a69c01b14fe8ac6a4b264fce7388a\",\r\n    \"0x33411a61b23f33c295575c74ed5dd3dfc478bc2c\",\r\n    \"0xe5ea847480ddf791e84456e3a658a16db914154b\",\r\n    \"0xf9191c7a6893a30d664b401a1479c1427b50b1c1\",\r\n    \"0x9b71461fddd28365b26d15b049ced103cdbca1e6\",\r\n    \"0xd369cbf1fa8658edefc1782cc3cac8b6ed6ae657\",\r\n    \"0x8a64b18e5a80abc03aa5c8b9fa1c8dde1aeafb50\",\r\n    \"0x3f0a153bd668dd826f0b6da30a7a721279fd3cf5\",\r\n    \"0xf8057d4dcf947fe27027602aa6efa3de24029517\",\r\n    \"0xdfb12bf05af4fffbec2837ed890b48084c1f1c43\",\r\n    \"0x88454e684db9b8bf82b7d09d1116cb4670226518\",\r\n    \"0x2d52a5999fd5b14e1d4f44c9b89fc2a3471a6708\",\r\n    \"0x01d058f8ba591007f96bd9752136c14813dd4825\",\r\n    \"0xa32e2f9c42f6c7bd8bb7d495df26e0d5aa67802f\",\r\n    \"0x07bd43d2b6a8583894f7b86b797978a53e275011\",\r\n    \"0xa79494c3f30aebb6f183c05615f4743cba4d3a7b\",\r\n    \"0xdd58601aaa26348a696c50fdc945400bb3e9270d\",\r\n    \"0x4f2ec61fcbd3c802f6cee6ad6bbfe5bdd3650604\",\r\n    \"0xc6d2f12d30f51d4c6feae1b67c68ee5a42e2b342\",\r\n    \"0x4a7b59e5c8f89717563efe9be3a2d1480cc089a6\",\r\n    \"0xa8f6cee69363507304fe789f9d6cf5038d6b18e4\",\r\n    \"0x34e411216012f042fcecbf53b1d05cfa67ee9fe7\",\r\n    \"0x2f2327a8fdc282c494dac779ce65544fda532e46\",\r\n    \"0xebd5155f384578e20086e8ff0c3172f01f496e69\",\r\n    \"0x6554e83eb60f76f018989462898f3f36c6969463\",\r\n    \"0x82a75b61be49ee9daac4dae115b91eb0ae8dac97\",\r\n    \"0xd68235cb1346851d3fbff8037d0f48c38c58896a\",\r\n    \"0xd7c0f03ad92cb77fb55a7dacd06d6357174946f7\",\r\n    \"0xde0c78f8e0d72cb3a3e98f995802c2d68caff198\",\r\n    \"0x90aa3440cfd5f83100b34c204783b59ccde0c960\",\r\n    \"0x88f346e41bde3f09ae05ab0536c0d896ae1d0bd4\",\r\n    \"0x09c9ad317de06a746134469222ac0b4af0f5e6d9\",\r\n    \"0x76af02f0d6de083427078c11c8442834ae62b3a8\",\r\n    \"0x6a3887b8555704d327ec016f5bfa1d39a0616198\",\r\n    \"0xbf978648fec7a95dbe8b3f12959ce33f725720dd\",\r\n    \"0x176423074385a9e3cd3001e7d25df8c72ceb8e80\",\r\n    \"0x4a961770fb9b17ff3e8f5a2b55e46160cde671e9\",\r\n    \"0x472294840a90fb0671c455150fbfb7ec1ae81b6a\",\r\n    \"0x4e3ddeed6a369b3dd62ddedfd6cb0099124dfd6b\",\r\n    \"0x3c32603cf2e03dcdbd3ee17c5283c1e875428a01\",\r\n    \"0x28c0b3642930c1448594d4b97056efb78ab15643\",\r\n    \"0xfabcc6e2ec2faf171d31d4dd2aa515d3bcaa558c\",\r\n    \"0xc5b07cefc2ff3a3c8fc4400994867dd7e21db0d7\",\r\n    \"0xbced89f336252ef3e0d59ed93ce3e86616d6d5d0\",\r\n    \"0x3c90b5cf4552bc3575f061ca23a6dff9b0322580\",\r\n    \"0xc0fec9cfaf05bba6380f1b20c9494359de188c8f\",\r\n    \"0xdd20f55cd7de9ad9ef7d4ed9a5adc05e79d1c051\",\r\n    \"0x147dd618cfd3ef257ad3837f8d237a3963bbe9b7\",\r\n    \"0x8573125c40db355546b515f1538aa8462cff3cfb\",\r\n    \"0x59c52ddc0cb7395050ee6b4437437723a9680e14\",\r\n    \"0x81c5d9f4a1a1b9593ee6030e8a53ac978a8d1e13\",\r\n    \"0x3ee3d064b5bc2c578ab83167da333beba01300bb\",\r\n    \"0xb5b15c87870f7041fad37da8ddce4c0228a7e4f9\",\r\n    \"0x4ef07ea7306ab61a9b331289acb6db4c44396d81\",\r\n    \"0x74c2cfc3dcbb42d6dbc06afe3c3f94465e809f6b\",\r\n    \"0xc7addd8eb40a5e26781c4fb29125df6c162edc0e\",\r\n    \"0xd9efb864e7243afe3f7b9773dfc2aa297d4b2b94\",\r\n    \"0xcb621f41c366d2e541660e918b09c3cab4b13d6b\",\r\n    \"0x0658f358bb45d178aa5d72c909a17dfbbe6b9754\",\r\n    \"0x1ba42fade6993fe9bc742ebe04de592ec0c7b172\",\r\n    \"0x4c51434e65636e1a375093919f4452e2cd912d4a\",\r\n    \"0xf69e6a04e2b1c36769636da3637f421cc4e2b64b\",\r\n    \"0x039133a0d6862c176c69cc73f8228cc711961dda\",\r\n    \"0x48570f5c3be5e9eb16a7ec4afa8321c35c58a0cb\",\r\n    \"0x175d50c1caf56fc797238739fae56d1f5eae4322\",\r\n    \"0x319e692b402c3fde71c5a55b3f94edd06547efee\",\r\n    \"0x37fa5b572b734da7c9c54074a82950a151171cf3\",\r\n    \"0xf7fce345a920dfaaf3528bb2dbe09aa22d8bf3cf\",\r\n    \"0x893c725d569f15c65befe9b22ef8008844eaf64c\",\r\n    \"0xdada531c332a7e8f7ce85f070a6e7302e38f408d\",\r\n    \"0x15bb96a6ad73e09665dcddadb75690034c76c9e1\",\r\n    \"0x12fe1eebd8971f8d04450089be3f19b6798fba39\",\r\n    \"0x4983bc91f96fdd51d0411ca7890a4a4301aee91c\",\r\n    \"0x3bc12eb7fb9c14e9116968e58169ce0f82da0e50\",\r\n    \"0x50c00abdf82a8997ea27ca4f99f777c3a73b6060\",\r\n    \"0x86b9521cada3dd4e853f8f8de6a1e1179dfd6875\",\r\n    \"0xe8a1666806cb114626781f28ce07fc451879356d\",\r\n    \"0xfe95661ea36a7292480be11c81e6169357161d94\",\r\n    \"0xeaf7d5ce9dff4b027d2e7dcdc929190f28875c90\",\r\n    \"0xeeb4186b17feb7d24f9e99eb7fbf7743934727ea\",\r\n    \"0x071d9d8525f2f7092d50d9183265ab83c7cc0647\",\r\n    \"0x26dd6c08df0959357a8a10e77e236fe1608ee12b\",\r\n    \"0xc312add89b13671105f6695de17ca2ad0efee91b\",\r\n    \"0xd05129bff3df7cd1f2e96b1f040e6d51125123c9\",\r\n    \"0xc172445013bf362fea1e97f8c6dded37b0bacdce\"\r\n];\r\n\r\nexport default whitelist","import { useState, useEffect, useRef, useContext } from \"react\";\nimport toast from \"react-hot-toast\";\nimport Layout from 'layouts'\nimport './Presale.scss'\nimport { Container } from 'react-bootstrap'\n\n// Mouse image import removed\nimport coinImage from '../assets/burnimages/Icon_256_Coin_05.png'\n\nimport { useMediaQuery } from '@uidotdev/usehooks'\nimport { useConnectModal } from \"@rainbow-me/rainbowkit\";\nimport { useChainId, useAccount, useBalance, useReadContract, useWriteContract, useDisconnect } from \"wagmi\";\nimport { erc20Abi, zeroAddress } from \"viem\";\nimport { ethers } from \"ethers\";\nimport keccak256 from \"keccak256\";\nimport { MerkleTree } from \"merkletreejs\";\nimport BettingTimer from \"components/BettingTimer\";\n\nimport 'react-tabs/style/react-tabs.scss'\nimport {\n  TEST_NET,\n  GG_ADDRESS_TEST,\n  GG_ADDRESS_MAIN,\n  PRESALE_ADDRESS_TEST,\n  PRESALE_ADDRESS_MAIN,\n  PRICEFEED_ADDRESS_TEST,\n  PRICEFEED_ADDRESS_MAIN\n} from \"../config\";\nimport PriceFeedAbi from \"../config/abis/PRICEFEED_ABI.json\";\nimport PresaleAbi from \"../config/abis/PRESALE_ABI.json\";\nimport { RefreshContext } from '../context/RefreshContext'\n\nimport whitelist from \"../config/whitelist\";\n\nconst whitelistLeafNodes = whitelist.map((addr) => keccak256(addr));\nconst whitelistMerkleTree = new MerkleTree(whitelistLeafNodes, keccak256, { sortPairs: true });\nconsole.log(\"eagle whitelistMerkleTree = \", whitelistMerkleTree.getHexRoot());\n\n// Add animation keyframes style\nconst nftAnimationStyle = document.createElement('style');\nnftAnimationStyle.innerHTML = `\n  @keyframes pulse {\n    0% { transform: scale(1); opacity: 1; }\n    100% { transform: scale(1.05); opacity: 0.9; }\n  }\n  \n  @keyframes float {\n    0% { transform: translateY(0px); }\n    50% { transform: translateY(-10px); }\n    100% { transform: translateY(0px); }\n  }\n  \n  @keyframes glow {\n    0% { opacity: 0.5; }\n    100% { opacity: 0.8; }\n  }\n`;\ndocument.head.appendChild(nftAnimationStyle);\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nfunction formatNumber(num) {\n  if (num >= 1e9) return (num / 1e9).toFixed(1) + 'B';\n  if (num >= 1e6) return (num / 1e6).toFixed(1) + 'M';\n  if (num >= 1e3) return (num / 1e3).toFixed(1) + 'K';\n  return num.toString();\n}\n\nexport default function BettingPage() {\n  const isMobile = useMediaQuery(\"only screen and (max-width: 768px)\");\n  const { fastRefresh } = useRefresh();\n\n  const { data: txResult, writeContractAsync } = useWriteContract();\n\n  const { openConnectModal } = useConnectModal();\n  const { disconnect } = useDisconnect();\n\n  const chainId = useChainId();\n  const { isConnected, address } = useAccount();\n  const { data: balance, refetch: refetchBalance } = useBalance({ address: address });\n\n\n  const hexAddress = keccak256(isConnected ? address : \"\");\n  const hexProof = whitelistMerkleTree.getHexProof(hexAddress);\n  console.log(\"eagle hexProof = \", hexProof);\n\n  // Animation reference\n  const animationRef = useRef(null);\n\n  // Button animation state\n  const [isButtonPressed, setIsButtonPressed] = useState(false);\n\n  ////////GG//////////////////////////////////////\n  const { data: tokenBalance, refetch: refetchTokenBalance } = useReadContract({\n    address: chainId === TEST_NET ? GG_ADDRESS_TEST : GG_ADDRESS_MAIN,\n    abi: erc20Abi,\n    functionName: \"balanceOf\",\n    args: [isConnected ? address : zeroAddress],\n    chainId: chainId,\n  });\n\n  ////// Price Feed //////////////////////////////////\n  const { data: ethPrice, refetch: refetchEthPrice } = useReadContract({\n    address: chainId === TEST_NET ? PRICEFEED_ADDRESS_TEST : PRICEFEED_ADDRESS_MAIN,\n    abi: PriceFeedAbi,\n    functionName: \"latestAnswer\",\n    args: [],\n    chainId: chainId,\n  });\n\n\n  /////// Presale //////////////////////////////////\n  const { data: currentPhase, refetch: refetchCurrentPhase } = useReadContract({\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\n    abi: PresaleAbi,\n    functionName: \"getCurrentPhase\",\n    args: [],\n    chainId: chainId,\n  });\n\n  const { data: tokenPrice, refetch: refetchTokenPrice } = useReadContract({\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\n    abi: PresaleAbi,\n    functionName: \"getTokenPrice\",\n    args: [],\n    chainId: chainId,\n  });\n\n  const { data: nextPrice, refetch: refetchNextPrice } = useReadContract({\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\n    abi: PresaleAbi,\n    functionName: \"getNextPrice\",\n    args: [],\n    chainId: chainId,\n  });\n\n  const { data: minContribution, refetch: refetchMinContribution } = useReadContract({\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\n    abi: PresaleAbi,\n    functionName: \"minContribution\",\n    args: [],\n    chainId: chainId,\n  });\n\n  const { data: maxContribution, refetch: refetchMaxContribution } = useReadContract({\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\n    abi: PresaleAbi,\n    functionName: \"maxContribution\",\n    args: [],\n    chainId: chainId,\n  });\n\n  const { data: contributedSonicAmount, refetch: refetchContributedSonicAmount } = useReadContract({\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\n    abi: PresaleAbi,\n    functionName: \"contributedSonicAmounts\",\n    args: [isConnected ? address : zeroAddress],\n    chainId: chainId,\n  });\n\n  const { data: contributionPhase, refetch: refetchContributionPhase } = useReadContract({\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\n    abi: PresaleAbi,\n    functionName: \"getContributionPhase\",\n    args: [isConnected ? address : zeroAddress],\n    chainId: chainId,\n  });\n\n  const { data: purchasedTokenAmounts, refetch: refetchPurchasedTokenAmounts } = useReadContract({\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\n    abi: PresaleAbi,\n    functionName: \"purchasedTokenAmounts\",\n    args: [isConnected ? address : zeroAddress],\n    chainId: chainId,\n  });\n\n  const { data: timePhase1, refetch: refetchTimePhase1 } = useReadContract({\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\n    abi: PresaleAbi,\n    functionName: \"timePhase1\",\n    args: [],\n    chainId: chainId,\n  });\n\n  const { data: timePhase2, refetch: refetchTimePhase2 } = useReadContract({\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\n    abi: PresaleAbi,\n    functionName: \"timePhase2\",\n    args: [],\n    chainId: chainId,\n  });\n\n  const { data: timeEnd, refetch: refetchTimeEnd } = useReadContract({\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\n    abi: PresaleAbi,\n    functionName: \"timeEnd\",\n    args: [],\n    chainId: chainId,\n  });\n\n  const { data: totalPurchasedTokenAmount, refetch: refetchTotalPurchasedTokenAmount } = useReadContract({\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\n    abi: PresaleAbi,\n    functionName: \"totalPurchasedTokenAmount\",\n    args: [],\n    chainId: chainId,\n  });\n\n  const { data: totalRaisedSonicAmount, refetch: refetchTotalRaisedSonicAmount } = useReadContract({\n    address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\n    abi: PresaleAbi,\n    functionName: \"totalRaisedSonicAmount\",\n    args: [],\n    chainId: chainId,\n  });\n\n  /////////////////////////////////////////\n  const [openModalDeposit, setOpenModalDeposit] = useState(false);\n  const [openModalClaim, setOpenModalClaim] = useState(false);\n\n  const [depositAmount, setDepositAmount] = useState(0);\n\n  const [minEthAmount, setMinEthAmount] = useState(0);\n  const [maxEthAmount, setMaxEthAmount] = useState(0);\n  const [currentContribution, setCurrentContribution] = useState(0);\n  const [userPercent, setUserPercent] = useState(0);\n\n  const [isWhitelistedAirdrop, setIsWhitelistedAirdrop] = useState(false);\n\n  const [isAvailalbeDeposit, setIsAvailableDeposit] = useState(true);\n  const [isDepositing, setIsDepositing] = useState(false);\n\n  const [isAvailalbeClaim, setIsAvailableClaim] = useState(false);\n  const [isClaiming, setIsClaiming] = useState(false);\n\n  const [timeToEnd, setTimeToEnd] = useState(0);\n\n  const [currentPercent, setCurrentPercent] = useState(0);\n  const [remainedAmount, setRemainedAmount] = useState();\n\n\n  useEffect(() => {\n    refetchBalance();\n    refetchTokenBalance();\n\n    refetchEthPrice();\n    refetchTokenPrice();\n\n    refetchCurrentPhase();\n    refetchContributionPhase();\n    refetchPurchasedTokenAmounts();\n    refetchContributedSonicAmount();\n\n    refetchTotalRaisedSonicAmount();\n    refetchTotalPurchasedTokenAmount();\n  }, [fastRefresh]);\n\n  useEffect(() => {\n    if (minContribution === undefined ||\n      maxContribution === undefined ||\n      ethPrice === undefined ||\n      contributionPhase === undefined)\n      return;\n\n    const minEth = parseFloat(ethers.formatEther(minContribution));\n    setMinEthAmount(parseInt(minEth));\n\n    const maxEth = parseFloat(ethers.formatEther(maxContribution));\n    setMaxEthAmount(parseInt(maxEth));\n\n    const current = parseFloat(ethers.formatEther(contributionPhase));\n    setCurrentContribution(current);\n\n  }, [minContribution, maxContribution, ethPrice, contributionPhase]);\n\n  useEffect(() => {\n    if (totalPurchasedTokenAmount === undefined) return;\n\n    const temp = Number(ethers.formatEther(totalPurchasedTokenAmount));\n    setCurrentPercent((temp / 2000000000 * 100).toFixed(2));\n\n    setRemainedAmount(formatNumber(2000000000 - Number(ethers.formatEther(totalPurchasedTokenAmount))))\n  }, [totalPurchasedTokenAmount])\n\n  useEffect(() => {\n    if (currentContribution === undefined || minEthAmount === undefined || maxEthAmount === undefined) return;\n\n    console.log(\"eagle currentContribution = \", currentContribution)\n    console.log(\"eagle minEthAmount = \", minEthAmount)\n    if (currentContribution < minEthAmount)\n      setUserPercent(0)\n    else\n      setUserPercent(Math.min(100, ((currentContribution - minEthAmount) / (maxEthAmount - minEthAmount)) * 100))\n  }, [currentContribution, minEthAmount, maxEthAmount])\n\n  useEffect(() => {\n    if (currentPhase === undefined || timePhase1 === undefined || timePhase2 === undefined || timeEnd === undefined) return;\n\n    const phase = Number(currentPhase);\n\n    if (phase === 3)\n      setIsAvailableClaim(true);\n    else\n      setIsAvailableClaim(false);\n\n    if (phase === 0)\n      setTimeToEnd(timePhase1 ? Number(timePhase1) : 0);\n    else if (phase === 1)\n      setTimeToEnd(timePhase2 ? Number(timePhase2) : 0);\n    else if (phase === 2)\n      setTimeToEnd(timeEnd ? Number(timeEnd) : 0);\n\n  }, [currentPhase, timePhase1, timePhase2, timeEnd]);\n\n  useEffect(() => {\n    return () => {\n      if (animationRef.current) {\n        clearTimeout(animationRef.current);\n      }\n    };\n  }, [isClaiming]);\n\n  useEffect(() => {\n    if (!isConnected) return;\n\n    if (whitelist.includes(address.toLowerCase()))\n      setIsWhitelistedAirdrop(true);\n    else\n      setIsWhitelistedAirdrop(false);\n\n  }, [chainId, isConnected, address]);\n\n  useEffect(() => {\n    if (Number(currentPhase) === 0 || Number(currentPhase) === 3) {\n      setIsAvailableDeposit(false);\n      return;\n    }\n\n    if (Number(currentPhase) === 1 && isWhitelistedAirdrop === false) {\n      setIsAvailableDeposit(false);\n      return;\n    }\n\n    if (depositAmount < 50)\n      setIsAvailableDeposit(false);\n    else if (depositAmount > Number(ethers.formatEther(balance.value)))\n      setIsAvailableDeposit(false);\n    else if (depositAmount > 1000 - currentContribution)\n      setIsAvailableDeposit(false);\n    else\n      setIsAvailableDeposit(true);\n  }, [depositAmount])\n\n  const handleChange = (e) => {\n    setDepositAmount(e.target.value);\n  }\n\n  const handleMax = () => {\n    const availableBalance = Number(ethers.formatEther(balance.value)) - 0.1;\n    const maxDeposit = maxEthAmount - currentContribution;\n    const temp = availableBalance > maxDeposit ? maxDeposit : availableBalance;\n    if (temp < 0)\n      setDepositAmount(0);\n    else\n      setDepositAmount(temp);\n  }\n\n  const getTextDeposit = () => {\n    if (balance === undefined || depositAmount === undefined || currentContribution === undefined) return;\n\n    if (Number(currentPhase) === 0) {\n      return 'Not Started Presale Yet';\n    }\n\n    if (Number(currentPhase) === 3) {\n      return 'Finished Presale';\n    }\n\n    if (Number(currentPhase) === 1 && isWhitelistedAirdrop === false) {\n      return 'Not whitelisted';\n    }\n\n    if (currentContribution > 950)\n      return 'Reached to Maximum Amount';\n\n    if (depositAmount < 50)\n      return 'Minimum Amount is 50 S';\n\n    if (depositAmount > Number(ethers.formatEther(balance.value)))\n      return 'Insufficient Balance';\n\n    if (depositAmount > 1000 - currentContribution)\n      return 'Exceed Maximum Amount'\n\n    if (isDepositing)\n      return 'Depositing...';\n\n    return 'Deposit SONIC'\n  }\n\n  const handleDeposit = async () => {\n    if (!isConnected) {\n      openConnectModal();\n      return;\n    }\n\n    if (!isAvailalbeDeposit) {\n      return;\n    }\n\n    setIsDepositing(true);\n    await writeContractAsync({\n      address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\n      abi: PresaleAbi,\n      functionName: \"purchaseToken\",\n      args: [hexProof],\n      value: ethers.parseEther(depositAmount.toString())\n    })\n      .then(() => {\n        setTimeout(() => {\n          setIsDepositing(false);\n          setOpenModalDeposit(true);\n        }, 3000); // Keep animation running for a bit after Claim completes\n      })\n      .catch((err) => {\n        setIsDepositing(false);\n      });\n  }\n\n  const handleClaim = async () => {\n    if (!isConnected) {\n      openConnectModal();\n      return;\n    }\n\n    if (!isAvailalbeClaim) {\n      return;\n    }\n\n    setIsClaiming(true);\n    await writeContractAsync({\n      address: chainId === TEST_NET ? PRESALE_ADDRESS_TEST : PRESALE_ADDRESS_MAIN,\n      abi: PresaleAbi,\n      functionName: \"claimTokens\",\n      args: []\n    })\n      .then(() => {\n        setTimeout(() => {\n          setIsClaiming(false);\n          setOpenModalClaim(true);\n        }, 3000); // Keep animation running for a bit after Claim completes\n      })\n      .catch((err) => {\n        setIsClaiming(false);\n      });\n  }\n\n  return (\n    <Layout>\n      {/* Futuristic background glow overlay */}\n      <div className=\"glow-overlay\"></div>\n\n      {/* Floating coins background */}\n\n\n      {/* Custom mouse cursor removed */}\n      {\n        isConnected ?\n          <>\n            <Container fluid className=\"compact-presale\">\n              {/* Floating coins background - minimal */}\n\n              <div className=\"presale-dashboard\">\n\n                {/* Compact Header with Total Raised */}\n                <div className=\"header-section\">\n                  <div className=\"banner-mini\">\n                    <h1>$GG PRESALE</h1>\n                    <div className=\"phase-info\">\n                      <div className=\"current-phase\">\n                        {\n                          Number(currentPhase) === 3 ?\n                            <p>Finished • <BettingTimer timeToEnd={timeToEnd} /></p>\n                            :\n                            (\n                              Number(currentPhase) === 0 ?\n                                <p>Starts In • <BettingTimer timeToEnd={timeToEnd} /></p>\n                                :\n                                <p>Phase {currentPhase ? Number(currentPhase) : 0} • <BettingTimer timeToEnd={timeToEnd} /></p>\n                            )\n\n                        }\n                      </div>\n                      <div className=\"phase-eligibility\">\n                        <span className=\"eligibility-label\">Your Eligibility:</span>\n                        <div className=\"phase-badges\">\n                          <span className={`phase-badge ${isWhitelistedAirdrop ? 'active' : ''}`}>\n                            <span className=\"badge-icon\">🎯</span>\n                            Whitelist Phase\n                          </span>\n                          <span className=\"phase-badge active\">\n                            <span className=\"badge-icon\">🌎</span>\n                            Public Phase\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"total-raised-card\">\n                    <div className=\"raised-content\">\n                      <div className=\"raised-header\">\n                        <div className=\"header-left\">\n                          <span className=\"raised-icon\">🎯</span>\n                          <div className=\"header-text\">\n                            <h3>Total Raised</h3>\n                            <div className=\"subtitle\">Presale Progress</div>\n                          </div>\n                        </div>\n                        <div className=\"status-badge\">ACTIVE</div>\n                      </div>\n\n                      <div className=\"raised-stats\">\n                        <div className=\"main-amount\">\n                          <span className=\"amount\">{totalRaisedSonicAmount ? Number(ethers.formatEther(totalRaisedSonicAmount)).toFixed(0) : 0} SONIC</span>\n                          <span className=\"target\">/ {(totalRaisedSonicAmount && ethPrice) ? Number(ethers.formatUnits(totalRaisedSonicAmount * ethPrice, 26)).toFixed(0) : 0} $</span>\n                        </div>\n\n                        <div className=\"progress-section\">\n                          <div className=\"progress-bar-full\">\n                            <div className=\"progress-bar-full\" style={{ width: `${currentPercent}%` }}></div>\n                          </div>\n                          <div className=\"progress-text\">\n                            <span className=\"percentage\">{currentPercent}% Complete</span>\n                            <span className=\"remaining\">{remainedAmount} $GG Remaining</span>\n                          </div>\n                        </div>\n\n                        <div className=\"mini-stats\">\n                          <div className=\"mini-stat\">\n                            {\n                              Number(currentPhase) === 3 ?\n                                <span className=\"value\">Finished</span>\n                                :\n                                (\n                                  Number(currentPhase) === 0 ?\n                                    <span className=\"value\">Not Started Yet</span>\n                                    :\n                                    <span className=\"value\">Phase {Number(currentPhase)} {Number(currentPhase) === 1 && \"(Whitelist)\"} {Number(currentPhase) === 2 && \"(Public)\"}</span>\n                                )\n\n                            }\n                            <span className=\"label\">Current Phase</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Main Dashboard Grid */}\n                <div className=\"dashboard-grid\">\n\n                  {/* Left Column - Info Cards */}\n                  <div className=\"info-column\">\n                    <div className=\"quick-stats\">\n                      <div className=\"stat\">\n                        <span className=\"stat-label\">Token Price</span>\n                        <span className=\"stat-value\">${tokenPrice ? Number(ethers.formatUnits(tokenPrice, 8)) : '0.0000'}</span>\n                      </div>\n                      <div className=\"stat\">\n                        <span className=\"stat-label\">SONIC Price</span>\n                        <span className=\"stat-value\">${ethPrice ? Number(ethers.formatUnits(ethPrice, 8)) : '0.00'}</span>\n                      </div>\n                      <div className=\"stat\">\n                        <span className=\"stat-label\">Total Contribution</span>\n                        <span className=\"stat-value\">{contributedSonicAmount ? Number(ethers.formatEther(contributedSonicAmount)).toFixed(0) : 0} SONIC</span>\n                      </div>\n                      <div className=\"stat\">\n                        <span className=\"stat-label\">Claimable $GG</span>\n                        <span className=\"stat-value\">{purchasedTokenAmounts ? Number(ethers.formatUnits(purchasedTokenAmounts, 18)).toFixed(0) : '0'}</span>\n                      </div>\n                    </div>\n\n                    <div className=\"balances-compact\">\n                      <h4>Your Balances</h4>\n                      <div className=\"balance-row\">\n                        <span>SONIC: <strong>{balance ? Number(ethers.formatUnits(balance.value, 18)).toFixed(0) : '0'}</strong></span>\n                        <span>GG: <strong>{tokenBalance ? Number(ethers.formatUnits(tokenBalance, 18)).toFixed(0) : '0'}</strong></span>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Right Column - Actions */}\n                  <div className=\"action-column\">\n                    <div className=\"action-card\">\n                      <h3>Deposit & Claim</h3>\n\n                      {/* Purchase Section */}\n                      <div className=\"purchase-area\">\n                        <div className=\"input-row\">\n                          <input\n                            type=\"number\"\n                            placeholder={`Amount (Min: ${minEthAmount})`}\n                            value={depositAmount}\n                            onChange={handleChange}\n                            className=\"amount-input\"\n                          />\n                          <button\n                            className=\"max-btn\"\n                            onClick={handleMax}\n                          >\n                            MAX\n                          </button>\n                        </div>\n\n                        <div className=\"limits-info\">\n                          <span>Min: {minEthAmount} S</span>\n                          <span>{currentContribution} S</span>\n                          <span>Max: {maxEthAmount} S</span>\n                        </div>\n\n                        <div className=\"progress-mini\">\n                          <div\n                            className=\"progress-fill\"\n                            style={{ width: `${userPercent}%` }}\n                          ></div>\n                        </div>\n\n                        <button\n                          className={`action-btn purchase ${!isAvailalbeDeposit ? 'disabled' : ''}`}\n                          onClick={handleDeposit}\n                          disabled={!isAvailalbeDeposit || isDepositing}\n                        >\n                          {getTextDeposit()}\n                        </button>\n                      </div>\n\n                      {/* Claim Section */}\n                      <div className=\"claim-area\">\n                        <div className=\"claim-info\">\n                          <span>Claim Status: </span>\n                          <span className={isAvailalbeClaim ? 'status-ready' : 'status-waiting'}>\n                            {isAvailalbeClaim ? 'Ready!' : 'Not Ready'}\n                          </span>\n                        </div>\n\n                        <button\n                          className={`action-btn claim ${!isAvailalbeClaim ? 'disabled' : ''}`}\n                          onClick={handleClaim}\n                          disabled={!isAvailalbeClaim || isClaiming}\n                        >\n                          {isClaiming ? 'Claiming...' : 'Claim GG'}\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Container>\n            {\n              openModalDeposit &&\n              <div className=\"success-modal-overlay\" style={{\n                position: 'fixed',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                backgroundColor: 'rgba(0, 0, 0, 0.7)',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                zIndex: 1000,\n                backdropFilter: 'blur(8px)',\n                animation: 'fadeIn 0.3s ease-out'\n              }}>\n                <div className=\"success-card\" style={{\n                  background: 'linear-gradient(135deg, rgba(20, 30, 60, 0.9) 0%, rgba(30, 40, 80, 0.9) 100%)',\n                  borderRadius: '16px',\n                  padding: '30px',\n                  maxWidth: '500px',\n                  width: '90%',\n                  boxShadow: '0 10px 30px rgba(0, 0, 0, 0.5), 0 0 30px rgba(54, 202, 186, 0.5)',\n                  border: '1px solid rgba(54, 202, 186, 0.3)',\n                  position: 'relative',\n                  overflow: 'hidden',\n                  animation: 'slideUp 0.5s ease-out, pulse 2s infinite alternate',\n                  textAlign: 'center'\n                }}>\n                  {/* Success icon */}\n                  <div style={{\n                    width: '80px',\n                    height: '80px',\n                    borderRadius: '50%',\n                    background: 'rgba(54, 202, 186, 0.2)',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    margin: '0 auto 20px',\n                    boxShadow: '0 0 20px rgba(54, 202, 186, 0.5)',\n                    animation: 'pulse 1.5s infinite alternate'\n                  }}>\n                    <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path d=\"M9 16.17L4.83 12L3.41 13.41L9 19L21 7L19.59 5.59L9 16.17Z\" fill=\"#36CABA\" />\n                    </svg>\n                  </div>\n\n                  {/* Glowing lines */}\n                  <div style={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '2px',\n                    background: 'linear-gradient(90deg, transparent, rgba(54, 202, 186, 0.8), transparent)',\n                    animation: 'shimmer 2s infinite linear'\n                  }}></div>\n\n                  {/* Success title */}\n                  <h2 style={{\n                    margin: '0 0 15px 0',\n                    fontFamily: 'THEBOLDFONT, sans-serif',\n                    fontSize: '28px',\n                    background: 'linear-gradient(90deg, #36CABA, #2A9E8E)',\n                    WebkitBackgroundClip: 'text',\n                    WebkitTextFillColor: 'transparent',\n                    textShadow: '0 0 10px rgba(54, 202, 186, 0.5)',\n                    letterSpacing: '1px'\n                  }}>\n                    $Sonic Deposited!\n                  </h2>\n\n                  {/* Success message */}\n                  <p style={{\n                    color: '#ffffff',\n                    fontSize: '16px',\n                    lineHeight: '1.5',\n                    margin: '0 0 25px 0',\n                    opacity: 0.9\n                  }}>\n                    You can claim $GG token after presale time!\n                  </p>\n\n                  {/* Close button */}\n                  <button\n                    onClick={() => setOpenModalDeposit(false)}\n                    style={{\n                      background: 'linear-gradient(135deg, #36CABA, #2A9E8E)',\n                      border: 'none',\n                      borderRadius: '8px',\n                      padding: '12px 30px',\n                      color: 'white',\n                      fontFamily: 'THEBOLDFONT, sans-serif',\n                      fontSize: '16px',\n                      cursor: 'pointer',\n                      boxShadow: '0 4px 15px rgba(54, 202, 186, 0.3)',\n                      transition: 'all 0.3s ease',\n                      letterSpacing: '1px'\n                    }}\n                    onMouseOver={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\n                    onMouseOut={(e) => e.currentTarget.style.transform = 'translateY(0)'}\n                  >\n                    DONE\n                  </button>\n                </div>\n              </div>\n            }\n            {\n              openModalClaim &&\n              <div className=\"success-modal-overlay\" style={{\n                position: 'fixed',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                backgroundColor: 'rgba(0, 0, 0, 0.7)',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                zIndex: 1000,\n                backdropFilter: 'blur(8px)',\n                animation: 'fadeIn 0.3s ease-out'\n              }}>\n                <div className=\"success-card\" style={{\n                  background: 'linear-gradient(135deg, rgba(20, 30, 60, 0.9) 0%, rgba(30, 40, 80, 0.9) 100%)',\n                  borderRadius: '16px',\n                  padding: '30px',\n                  maxWidth: '500px',\n                  width: '90%',\n                  boxShadow: '0 10px 30px rgba(0, 0, 0, 0.5), 0 0 30px rgba(54, 202, 186, 0.5)',\n                  border: '1px solid rgba(54, 202, 186, 0.3)',\n                  position: 'relative',\n                  overflow: 'hidden',\n                  animation: 'slideUp 0.5s ease-out, pulse 2s infinite alternate',\n                  textAlign: 'center'\n                }}>\n                  {/* Success icon */}\n                  <div style={{\n                    width: '80px',\n                    height: '80px',\n                    borderRadius: '50%',\n                    background: 'rgba(54, 202, 186, 0.2)',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    margin: '0 auto 20px',\n                    boxShadow: '0 0 20px rgba(54, 202, 186, 0.5)',\n                    animation: 'pulse 1.5s infinite alternate'\n                  }}>\n                    <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path d=\"M9 16.17L4.83 12L3.41 13.41L9 19L21 7L19.59 5.59L9 16.17Z\" fill=\"#36CABA\" />\n                    </svg>\n                  </div>\n\n                  {/* Glowing lines */}\n                  <div style={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '2px',\n                    background: 'linear-gradient(90deg, transparent, rgba(54, 202, 186, 0.8), transparent)',\n                    animation: 'shimmer 2s infinite linear'\n                  }}></div>\n\n                  {/* Success title */}\n                  <h2 style={{\n                    margin: '0 0 15px 0',\n                    fontFamily: 'THEBOLDFONT, sans-serif',\n                    fontSize: '28px',\n                    background: 'linear-gradient(90deg, #36CABA, #2A9E8E)',\n                    WebkitBackgroundClip: 'text',\n                    WebkitTextFillColor: 'transparent',\n                    textShadow: '0 0 10px rgba(54, 202, 186, 0.5)',\n                    letterSpacing: '1px'\n                  }}>\n                    $GG CLAIMED!\n                  </h2>\n\n                  {/* Success message */}\n                  <p style={{\n                    color: '#ffffff',\n                    fontSize: '16px',\n                    lineHeight: '1.5',\n                    margin: '0 0 25px 0',\n                    opacity: 0.9\n                  }}>\n                    Your $GG sent to your wallet!\n                  </p>\n\n                  {/* Close button */}\n                  <button\n                    onClick={() => setOpenModalClaim(false)}\n                    style={{\n                      background: 'linear-gradient(135deg, #36CABA, #2A9E8E)',\n                      border: 'none',\n                      borderRadius: '8px',\n                      padding: '12px 30px',\n                      color: 'white',\n                      fontFamily: 'THEBOLDFONT, sans-serif',\n                      fontSize: '16px',\n                      cursor: 'pointer',\n                      boxShadow: '0 4px 15px rgba(54, 202, 186, 0.3)',\n                      transition: 'all 0.3s ease',\n                      letterSpacing: '1px'\n                    }}\n                    onMouseOver={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\n                    onMouseOut={(e) => e.currentTarget.style.transform = 'translateY(0)'}\n                  >\n                    DONE\n                  </button>\n                </div>\n              </div>\n            }\n\n          </>\n          :\n          <>\n            <Container fluid className=\"simple-presale\">\n              <div className=\"simple-content\">\n                <div className=\"connect-section\">\n                  <h1>$GG PRESALE</h1>\n                  <p>Connect your wallet to participate</p>\n\n                  <button\n                    onClick={openConnectModal}\n                    className=\"connect-btn\"\n                  >\n                    Connect Wallet\n                  </button>\n\n\n                </div>\n              </div>\n            </Container>\n          </>\n      }\n    </Layout>\n  )\n}\n"],"names":["RoundButton","_ref","children","className","onClick","variant","disabled","_jsx","ConnectWalletButton","props","Header","navigate","useNavigate","pathname","hash","useLocation","window","location","href","Navbar","expand","sticky","Container","fluid","_jsxs","Brand","Image","src","Logo","height","width","ConnectButton","Custom","account","chain","openAccountModal","openChainModal","openConnectModal","authenticationStatus","mounted","ready","connected","opacity","pointerEvents","userSelect","unsupported","type","hasIcon","style","background","iconBackground","borderRadius","overflow","marginRight","boxShadow","iconUrl","alt","_chain$name","name","displayName","displayBalance","Layout","_Fragment","timeToEnd","timeLeft","setTimeLeft","useState","days","hours","minutes","seconds","useEffect","calculateTimeLeft","now","Math","floor","Date","difference","timer","setInterval","clearInterval","padNumber","num","String","padStart","TEST_NET","GG_ADDRESS_TEST","GG_ADDRESS_MAIN","PRICEFEED_ADDRESS_TEST","PRICEFEED_ADDRESS_MAIN","PRESALE_ADDRESS_TEST","PRESALE_ADDRESS_MAIN","whitelistLeafNodes","whitelist","map","addr","keccak256","whitelistMerkleTree","MerkleTree","sortPairs","console","log","getHexRoot","nftAnimationStyle","document","createElement","innerHTML","head","appendChild","useRefresh","fast","slow","useContext","RefreshContext","fastRefresh","slowRefresh","BettingPage","useMediaQuery","data","txResult","writeContractAsync","useWriteContract","useConnectModal","disconnect","useDisconnect","chainId","useChainId","isConnected","address","useAccount","balance","refetch","refetchBalance","useBalance","hexAddress","hexProof","getHexProof","animationRef","useRef","isButtonPressed","setIsButtonPressed","tokenBalance","refetchTokenBalance","useReadContract","abi","erc20Abi","functionName","args","zeroAddress","ethPrice","refetchEthPrice","PriceFeedAbi","currentPhase","refetchCurrentPhase","PresaleAbi","tokenPrice","refetchTokenPrice","nextPrice","refetchNextPrice","minContribution","refetchMinContribution","maxContribution","refetchMaxContribution","contributedSonicAmount","refetchContributedSonicAmount","contributionPhase","refetchContributionPhase","purchasedTokenAmounts","refetchPurchasedTokenAmounts","timePhase1","refetchTimePhase1","timePhase2","refetchTimePhase2","timeEnd","refetchTimeEnd","totalPurchasedTokenAmount","refetchTotalPurchasedTokenAmount","totalRaisedSonicAmount","refetchTotalRaisedSonicAmount","openModalDeposit","setOpenModalDeposit","openModalClaim","setOpenModalClaim","depositAmount","setDepositAmount","minEthAmount","setMinEthAmount","maxEthAmount","setMaxEthAmount","currentContribution","setCurrentContribution","userPercent","setUserPercent","isWhitelistedAirdrop","setIsWhitelistedAirdrop","isAvailalbeDeposit","setIsAvailableDeposit","isDepositing","setIsDepositing","isAvailalbeClaim","setIsAvailableClaim","isClaiming","setIsClaiming","setTimeToEnd","currentPercent","setCurrentPercent","remainedAmount","setRemainedAmount","undefined","minEth","parseFloat","ethers","parseInt","maxEth","current","temp","Number","toFixed","toString","min","phase","clearTimeout","includes","toLowerCase","value","BettingTimer","placeholder","onChange","e","target","handleMax","availableBalance","maxDeposit","async","then","setTimeout","catch","err","getTextDeposit","position","top","left","right","bottom","backgroundColor","display","justifyContent","alignItems","zIndex","backdropFilter","animation","padding","maxWidth","border","textAlign","margin","viewBox","fill","xmlns","d","fontFamily","fontSize","WebkitBackgroundClip","WebkitTextFillColor","textShadow","letterSpacing","color","lineHeight","cursor","transition","onMouseOver","currentTarget","transform","onMouseOut"],"sourceRoot":""}